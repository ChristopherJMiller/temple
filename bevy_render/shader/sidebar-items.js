initSidebarItems({"constant":[["GL_FRONT_FACING",""],["GL_INSTANCE_INDEX",""],["GL_VERTEX_INDEX",""]],"derive":[["ShaderDefs","Derives the ShaderDefs trait. Each field must implement ShaderDef or this will fail. You can ignore fields using `#[shader_defs(ignore)]`."]],"enum":[["ShaderError","An error that occurs during shader handling."],["ShaderSource","The full \"source\" of a shader"],["ShaderStage","The stage of a shader"]],"fn":[["asset_shader_defs_system","Updates [RenderPipelines] with the latest [ShaderDefs] from a given asset type"],["clear_shader_defs_system","Clears each [RenderPipelines]' shader defs collection"],["glsl_to_spirv",""],["shader_defs_system","Updates [RenderPipelines] with the latest [ShaderDefs]"],["shader_update_system",""]],"struct":[["Shader","A shader, as defined by its [ShaderSource] and [ShaderStage]"],["ShaderDefIterator","Iterates over all [ShaderDef] items in [ShaderDefs]"],["ShaderLayout","Defines the memory layout of a shader"],["ShaderLoader",""],["ShaderStages","All stages in a shader program"],["ShaderStagesIterator",""]],"trait":[["ShaderDef","Something that can either be \"defined\" or \"not defined\". This is used to determine if a \"shader def\" should be considered \"defined\""],["ShaderDefs","A collection of \"shader defs\", which define compile time definitions for shaders."]]});