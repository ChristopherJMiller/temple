(function() {var implementors = {};
implementors["bevy_scene"] = [{"text":"impl <a class=\"trait\" href=\"bevy_ecs/system/commands/trait.Command.html\" title=\"trait bevy_ecs::system::commands::Command\">Command</a> for <a class=\"struct\" href=\"bevy_scene/struct.SpawnScene.html\" title=\"struct bevy_scene::SpawnScene\">SpawnScene</a>","synthetic":false,"types":["bevy_scene::command::SpawnScene"]},{"text":"impl <a class=\"trait\" href=\"bevy_ecs/system/commands/trait.Command.html\" title=\"trait bevy_ecs::system::commands::Command\">Command</a> for <a class=\"struct\" href=\"bevy_scene/struct.SpawnSceneAsChild.html\" title=\"struct bevy_scene::SpawnSceneAsChild\">SpawnSceneAsChild</a>","synthetic":false,"types":["bevy_scene::command::SpawnSceneAsChild"]}];
implementors["bevy_transform"] = [{"text":"impl <a class=\"trait\" href=\"bevy_ecs/system/commands/trait.Command.html\" title=\"trait bevy_ecs::system::commands::Command\">Command</a> for <a class=\"struct\" href=\"bevy_transform/hierarchy/struct.InsertChildren.html\" title=\"struct bevy_transform::hierarchy::InsertChildren\">InsertChildren</a>","synthetic":false,"types":["bevy_transform::hierarchy::child_builder::InsertChildren"]},{"text":"impl <a class=\"trait\" href=\"bevy_ecs/system/commands/trait.Command.html\" title=\"trait bevy_ecs::system::commands::Command\">Command</a> for <a class=\"struct\" href=\"bevy_transform/hierarchy/struct.PushChildren.html\" title=\"struct bevy_transform::hierarchy::PushChildren\">PushChildren</a>","synthetic":false,"types":["bevy_transform::hierarchy::child_builder::PushChildren"]},{"text":"impl <a class=\"trait\" href=\"bevy_ecs/system/commands/trait.Command.html\" title=\"trait bevy_ecs::system::commands::Command\">Command</a> for <a class=\"struct\" href=\"bevy_transform/hierarchy/struct.DespawnRecursive.html\" title=\"struct bevy_transform::hierarchy::DespawnRecursive\">DespawnRecursive</a>","synthetic":false,"types":["bevy_transform::hierarchy::hierarchy::DespawnRecursive"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()