var searchIndex = JSON.parse('{\
"temple":{"doc":"Temple is a platform built with the Bevy Engine and has a …","i":[[0,"game","temple","Game mechanisms and sprite attribute definitions.",null,null],[0,"attributes","temple::game","Attribute definitions and systems.",null,null],[0,"checkpoint","temple::game::attributes","Sets the players checkpoint. …",null,null],[3,"PlayerReachedCheckpoint","temple::game::attributes::checkpoint","",null,null],[3,"Checkpoint","","",null,null],[12,"0","","",0,null],[0,"deadly","temple::game::attributes","Makes sprite deadly to the player. <code>deadly()</code>",null,null],[3,"Deadly","temple::game::attributes::deadly","",null,null],[0,"moving","temple::game::attributes","Defines a cyclically moving sprite. …",null,null],[4,"MovingDirection","temple::game::attributes::moving","Direction of sprite movement.",null,null],[13,"Right","","",1,null],[13,"Down","","",1,null],[13,"Left","","",1,null],[13,"Up","","",1,null],[11,"from_param","","",1,[[["i32",15]],["option",4]]],[3,"MovingSprite","","<code>moving</code> attribute state.",null,null],[12,"dir","","",2,null],[12,"speed","","",2,null],[12,"duration","","",2,null],[12,"last_delta_t","","",2,null],[12,"delta","","",2,null],[12,"starting_position","","",2,null],[12,"movement_vect","","",2,null],[12,"current_time","","",2,null],[11,"new","","",2,[[["i32",15],["vec2",3],["movingdirection",4]]]],[11,"increment_time","","Increments time and recalculates [Self::delta]",2,[[["f32",15]]]],[11,"get_position","","Returns the position of the sprite, per current time",2,[[],["vec2",3]]],[11,"get_delta_impulse","","Calculates a impulse that is applied to the player when …",2,[[],["vec2",3]]],[4,"MovingAttributeSystemSteps","","Simulation steps for moving sprites. Used for applying …",null,null],[13,"ApplyDeltaTranslation","","",3,null],[5,"moving_system","","System to move all moving sprites per change in [Time].",null,[[["time",3],["res",3],["query",3]]]],[5,"move_player","","Moves the [Player] if they are on top of a moving sprite. …",null,[[["query",3],["query",3]]]],[0,"player","temple::game::attributes","Represents the player. <code>player()</code>",null,null],[3,"PlayerDied","temple::game::attributes::player","",null,null],[3,"Player","","Active Player State",null,null],[12,"height_adjust","","",4,null],[12,"grounded","","",4,null],[12,"jump_in_progress","","",4,null],[12,"outside_ground_bounds","","",4,null],[12,"on_moving_entity","","",4,null],[12,"respawn_pos","","",4,null],[11,"new","","",4,[[["vec2",3]]]],[5,"on_death_system","","Consumes [PlayerDied] tags and respawns the player.",null,[[["query",3],["query",3],["commands",3]]]],[5,"on_checkpoint_system","","Consumes [PlayerReachedCheckpoint] tags and sets the new …",null,[[["player",3],["query",3],["with",3],["query",3],["commands",3]]]],[0,"solid","temple::game::attributes","Makes sprite solid to the player. <code>solid()</code>",null,null],[3,"Solid","temple::game::attributes::solid","",null,null],[8,"Attribute","temple::game::attributes","Attribute, as used with a [crate::sprite::SpriteType]",null,null],[18,"KEY","","",5,null],[10,"build","","",5,[[["commands",3],["i32",15],["vec2",3],["entity",3],["vec",3]]]],[3,"AttributeEntry","","Attribute with supplied parameters.",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[5,"derive_attribute_entry","","Parses attribute string as a key and supplied parameters.",null,[[["string",3]],["attributeentry",3]]],[5,"build_attribute","","Constructs attribute onto a given [Entity]. Used during …",null,[[["commands",3],["string",3],["entity",3],["vec2",3]]]],[3,"AttributePlugin","","[Plugin] for attributes",null,null],[0,"camera","temple::game","Camera related systems.",null,null],[3,"CameraTarget","temple::game::camera","Tag for a non-player camera focus.",null,null],[3,"MainCamera","","Tag for declaring the main camera (as opposed to UI …",null,null],[6,"CameraOnly","","Component filtering for the camera.",null,null],[6,"CameraTargetOnly","","Component filtering for any [CameraTarget]\'s.",null,null],[6,"PlayerOnly","","Component filtering for the player.",null,null],[5,"target_camera","","System to determine camera targeting.",null,[[["transform",3],["query",3],["query",3],["transform",3],["query",3]]]],[3,"CameraPlugin","","[Plugin] for camera systems.",null,null],[0,"collision","temple::game","Handles contant and interaction events from rapier",null,null],[5,"determine_possible_tag_collision","temple::game::collision","Given an [Entity], determines what attribute it contains …",null,[[["query",3],["entity",3],["query",3]],[["string",3],["option",4]]]],[5,"on_contact_with_player","","Consumes the determined attribute that should be …",null,[[["commands",3],["string",3],["entity",3]]]],[5,"handle_collision_events","","Handles incoming contact events.",null,[[["player",3],["query",3],["checkpoint",3],["commands",3],["query",3],["deadly",3],["contactevent",4],["eventreader",3],["query",3]]]],[3,"CollisionPlugin","","[Plugin] for handling collision events from rapier.",null,null],[0,"collision_groups","temple::game","Static collision group definitions.",null,null],[17,"NONE_GROUP","temple::game::collision_groups","",null,null],[17,"PLAYER_HOVER_GROUP","","",null,null],[17,"PLAYER_GROUP","","",null,null],[17,"SOLID_GROUP","","",null,null],[17,"DETECTS_PLAYER_GROUP","","",null,null],[0,"player","temple::game","[Player] attribute systems",null,null],[17,"PLAYER_MOVE_SPEED","temple::game::player","",null,null],[17,"PLAYER_JUMP_FORCE","","",null,null],[5,"handle_player_movement","","Consumes [Kurinji] inputs for player horizontal movement.",null,[[["with",3],["query",3],["rigidbodyforces",3],["res",3],["kurinji",3]]]],[5,"handle_height_adjust","","Consumes [Kurinji] inputs for player hover height …",null,[[["player",3],["res",3],["kurinji",3],["query",3]]]],[5,"handle_player_hover","","Handles player hovering.",null,[[["querypipeline",3],["querypipelinecollidercomponentsquery",6],["query",3],["query",3],["res",3],["movingsprite",3]]]],[5,"handle_player_jump","","Consumes [Kurinji] inputs for player jumping.",null,[[["res",3],["kurinji",3],["query",3]]]],[3,"PlayerPlugin","","[Plugin] for player systems.",null,null],[3,"GamePlugins","temple::game","[PluginGroup] for game modules.",null,null],[0,"input","temple","Input config management and associated systems.",null,null],[17,"UP","temple::input","Input key for up direction input",null,null],[17,"RIGHT","","Input key for right direction input",null,null],[17,"LEFT","","Input key for left direction input",null,null],[17,"DOWN","","Input key for down direction input",null,null],[17,"JUMP","","Input key for jump action",null,null],[17,"MENU","","Input key for menu action",null,null],[5,"setup_inputs","","Loads [Kurinji] input config files",null,[[["kurinji",3],["resmut",3]]]],[3,"DevToggleCursor","","Temporary component to handle locking and unlocking the …",null,null],[12,"0","","",7,null],[5,"dev_toggle_cursor","","System for toggling the cursor via [DevToggleCursor].",null,[[["resmut",3],["resmut",3],["windows",3],["res",3],["kurinji",3],["devtogglecursor",3]]]],[3,"InputPlugin","","[Plugin] for input systems.",null,null],[0,"level","temple","Level config management and level loading.",null,null],[0,"config","temple::level","Handles all config manifest loading for levels.",null,null],[3,"LevelFileVersion","temple::level::config","Global config file version.",null,null],[12,"0","","",8,null],[3,"LevelFile","","Structure of levels.toml",null,null],[12,"version","","",9,null],[12,"levels","","",9,null],[3,"LevelDefinition","","Single level in levels.toml",null,null],[12,"id","","Id, must be unique",10,null],[12,"sprite_map","","Path to level map",10,null],[12,"sprites","","Sprites used in level",10,null],[3,"LevelSpriteEntry","","Sprite Entry for a [Level]",null,null],[12,"color","","24 Bit RGB ID",11,null],[12,"name","","Sprite ID, as mapped to [crate::sprite::GameSprite]",11,null],[3,"LevelSprite","","Sprite definition for a level",null,null],[12,"pos","","Position in the level",12,null],[12,"id","","Sprite ID, as mapped to [crate::sprite::GameSprite]",12,null],[3,"Level","","Stored object of a level, stores redundant id and list of …",null,null],[12,"id","","Level\'s ID.",13,null],[12,"sprites","","List of sprites in the level.",13,null],[5,"load_level_files","","System that loads all levels into the [LevelMap] resource",null,[[["hashmap",3],["resmut",3],["res",3],["hashmap",3],["res",3],["levelfileversion",3]]]],[0,"load","temple::level","Handles level loading for gameplay.",null,null],[3,"LoadLevel","temple::level::load","Instruction to load a new level",null,null],[12,"0","","",14,null],[3,"LevelLoadComplete","","Tag that LoadLevel has completed. Added to same entity as …",null,null],[3,"UnloadLevel","","Instruction to unload a level. Must be added to the same …",null,null],[3,"LevelLoadedSprite","","Tag that entity was loaded by level, and will be removed …",null,null],[5,"configure_rapier","","Startup system to configure rapier physics for sprites",null,[[["resmut",3],["rapierconfiguration",3]]]],[5,"load_level","","System that loads sprites in a given level. Can be …",null,[[["hashmap",3],["res",3],["query",3],["res",3],["hashmap",3],["without",3],["commands",3]]]],[5,"unload_level","","System that unloads a currently loaded level using the […",null,[[["commands",3],["query",3],["with",3],["entity",3],["query",3]]]],[6,"LevelId","temple::level","ID type for level map",null,null],[6,"LevelMap","","Type for storing all loaded levels",null,null],[3,"LevelPlugin","","[Plugin] for level management systems",null,null],[0,"sprite","temple","Sprite and sprite type config management",null,null],[17,"SPRITE_SIZE","temple::sprite","Conversion of game unit to pixel.",null,null],[6,"SpriteId","","Sprite ID",null,null],[6,"SpriteTypeMap","","Map that stores loaded sprite types.",null,null],[6,"SpriteMap","","Map that stores loaded sprites.",null,null],[3,"SpriteFileVersion","","Global sprite file version",null,null],[12,"0","","",15,null],[3,"SpriteTypesFile","","Object of sprites/types.toml",null,null],[12,"version","","",16,null],[12,"types","","",16,null],[3,"SpriteType","","Type Object within sprites/types.toml",null,null],[12,"id","","",17,null],[12,"attributes","","",17,null],[3,"SpriteFile","","Object of sprites/sprites.toml",null,null],[12,"version","","",18,null],[12,"sprites","","",18,null],[3,"SpriteEntry","","Sprite Object within sprites/sprites.toml",null,null],[12,"name","","",19,null],[12,"sprite_type","","",19,null],[12,"offset_x","","",19,null],[12,"offset_y","","",19,null],[12,"texture","","",19,null],[3,"GameSprite","","Sprite with loaded texture, to be used in game.",null,null],[12,"name","","",20,null],[12,"offset_x","","",20,null],[12,"offset_y","","",20,null],[12,"texture","","",20,null],[12,"attributes","","",20,null],[5,"load_sprite_types","","Startup system that loads all sprite types into memory map",null,[[["spritefileversion",3],["resmut",3],["res",3],["hashmap",3]]]],[5,"load_sprites","","Startup system that loads all sprites and sprite textures …",null,[[["spritefileversion",3],["assetserver",3],["res",3],["hashmap",3],["resmut",3],["assets",3],["resmut",3],["hashmap",3],["res",3],["res",3]]]],[4,"SpritePluginSteps","","System labels for sprite loading steps.",null,null],[13,"LoadSpriteTypes","","",21,null],[13,"LoadSprites","","",21,null],[3,"SpritePlugin","","[Plugin] for handling loading sprite config files …",null,null],[0,"util","temple","CLI definitions and runtime manifest validation",null,null],[0,"cli","temple::util","Handles the CLI options",null,null],[17,"LOAD_ARG","temple::util::cli","<code>load</code> argument. TODO: Convert to enum flags.",null,null],[17,"TEMPLE_URL","","Website about the Temple project",null,null],[3,"CliArgs","","Output of the CLI processing. Contains all possible …",null,null],[12,"load_level","","",22,null],[5,"get_cli_args","","Command line tool using clap",null,[[["gamefile",3],["string",3]],["cliargs",3]]],[5,"handle_cli_args","","Consumes incoming CLI arguments within Bevy",null,[[["cliargs",3],["res",3],["commands",3]]]],[0,"files","temple::util","Handles manifest validation",null,null],[17,"GAME_SETTING_PATH","temple::util::files","<code>game.toml</code> location",null,null],[17,"LEVEL_FILE_PATH","","<code>levels.toml</code> location",null,null],[17,"SPRITE_FILE_PATH","","<code>sprites.toml</code> location",null,null],[17,"SPRITE_TYPE_FILE_PATH","","<code>types.toml</code> location",null,null],[5,"verify_files","","Verifies all game config files are found and valid.",null,[[]]],[5,"find_toml_problems","","Consumes the TOML result and reports any errors found.",null,[[["error",3],["result",4],["str",15]],[["string",3],["option",4]]]],[0,"settings","temple::util","Handles the main settings file, <code>game.toml</code>.",null,null],[4,"LevelTransistionType","temple::util::settings","Describes what method should be used to allow players to …",null,null],[13,"Overworld","","On play, the player is loaded into the overworld to be …",23,null],[13,"NoOverworld","","On play, the player is loaded into the first level. …",23,null],[3,"GameFile","","Object that represents <code>game.toml</code>.",null,null],[12,"title","","Title of the game",24,null],[12,"authors","","Authors of the game",24,null],[12,"level_transistion","","Type of Level Transistion used",24,null],[12,"level_order","","If [LevelTransistionType::NoOverworld] is used, this …",24,null],[3,"Version","","",null,null],[12,"0","","",25,null],[5,"get_game_file","","Loads <code>game.toml</code>.",null,[[],["gamefile",3]]],[17,"VERSION","temple","Game version. For dev builds, this is a timestamp.",null,null],[5,"main","","Game Entrypoint",null,[[]]],[3,"FpsText","","Component tag for the FPS counter [Text]. TODO: Should be …",null,null],[5,"setup_fps_text","","Start up system for [FpsText] UI. TODO: Should be moved …",null,[[["assetserver",3],["res",3],["commands",3]]]],[5,"update_fps_system","","System that updates FPS counter via […",null,[[["with",3],["query",3],["diagnostics",3],["res",3],["text",3]]]],[11,"from","temple::game::attributes::checkpoint","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",26,[[]]],[11,"downcast","","",26,[[]]],[11,"upcast","","",26,[[],["option",4]]],[11,"to_subset","","",26,[[],["option",4]]],[11,"is_in_subset","","",26,[[],["bool",15]]],[11,"to_subset_unchecked","","",26,[[]]],[11,"from_subset","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",0,[[]]],[11,"downcast","","",0,[[]]],[11,"upcast","","",0,[[],["option",4]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[],["bool",15]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","temple::game::attributes::deadly","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",27,[[]]],[11,"downcast","","",27,[[]]],[11,"upcast","","",27,[[],["option",4]]],[11,"to_subset","","",27,[[],["option",4]]],[11,"is_in_subset","","",27,[[],["bool",15]]],[11,"to_subset_unchecked","","",27,[[]]],[11,"from_subset","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","temple::game::attributes::moving","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"clone_type_data","","",1,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",1,[[]]],[11,"downcast","","",1,[[]]],[11,"upcast","","",1,[[],["option",4]]],[11,"to_subset","","",1,[[],["option",4]]],[11,"is_in_subset","","",1,[[],["bool",15]]],[11,"to_subset_unchecked","","",1,[[]]],[11,"from_subset","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"clone_type_data","","",1,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_world","","",2,[[["world",3]]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",2,[[]]],[11,"downcast","","",2,[[]]],[11,"upcast","","",2,[[],["option",4]]],[11,"to_subset","","",2,[[],["option",4]]],[11,"is_in_subset","","",2,[[],["bool",15]]],[11,"to_subset_unchecked","","",2,[[]]],[11,"from_subset","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from_resources","","",2,[[["resources",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"as_any","","",3,[[],["any",8]]],[11,"dyn_eq","","",3,[[["dyneq",8]],["bool",15]]],[11,"as_dyn_eq","","",3,[[],["dyneq",8]]],[11,"dyn_hash","","",3,[[["hasher",8]]]],[11,"clone_type_data","","",3,[[],[["typedata",8],["global",3],["box",3]]]],[11,"get_hash","","",3,[[],["u64",15]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"get_hash","","",3,[[],["u64",15]]],[11,"downcast","","",3,[[]]],[11,"upcast","","",3,[[],["option",4]]],[11,"to_subset","","",3,[[],["option",4]]],[11,"is_in_subset","","",3,[[],["bool",15]]],[11,"to_subset_unchecked","","",3,[[]]],[11,"from_subset","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"clone_type_data","","",3,[[],[["global",3],["box",3],["typedata",8]]]],[11,"get_hash","","",3,[[],["u64",15]]],[11,"from","temple::game::attributes::player","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",28,[[]]],[11,"downcast","","",28,[[]]],[11,"upcast","","",28,[[],["option",4]]],[11,"to_subset","","",28,[[],["option",4]]],[11,"is_in_subset","","",28,[[],["bool",15]]],[11,"to_subset_unchecked","","",28,[[]]],[11,"from_subset","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",4,[[]]],[11,"downcast","","",4,[[]]],[11,"upcast","","",4,[[],["option",4]]],[11,"to_subset","","",4,[[],["option",4]]],[11,"is_in_subset","","",4,[[],["bool",15]]],[11,"to_subset_unchecked","","",4,[[]]],[11,"from_subset","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","temple::game::attributes::solid","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",29,[[]]],[11,"downcast","","",29,[[]]],[11,"upcast","","",29,[[],["option",4]]],[11,"to_subset","","",29,[[],["option",4]]],[11,"is_in_subset","","",29,[[],["bool",15]]],[11,"to_subset_unchecked","","",29,[[]]],[11,"from_subset","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","temple::game::attributes","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",6,[[]]],[11,"downcast","","",6,[[]]],[11,"upcast","","",6,[[],["option",4]]],[11,"to_subset","","",6,[[],["option",4]]],[11,"is_in_subset","","",6,[[],["bool",15]]],[11,"to_subset_unchecked","","",6,[[]]],[11,"from_subset","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_any","","",30,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",30,[[]]],[11,"downcast","","",30,[[]]],[11,"upcast","","",30,[[],["option",4]]],[11,"to_subset","","",30,[[],["option",4]]],[11,"is_in_subset","","",30,[[],["bool",15]]],[11,"to_subset_unchecked","","",30,[[]]],[11,"from_subset","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","temple::game::camera","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",31,[[]]],[11,"downcast","","",31,[[]]],[11,"upcast","","",31,[[],["option",4]]],[11,"to_subset","","",31,[[],["option",4]]],[11,"is_in_subset","","",31,[[],["bool",15]]],[11,"to_subset_unchecked","","",31,[[]]],[11,"from_subset","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",32,[[]]],[11,"downcast","","",32,[[]]],[11,"upcast","","",32,[[],["option",4]]],[11,"to_subset","","",32,[[],["option",4]]],[11,"is_in_subset","","",32,[[],["bool",15]]],[11,"to_subset_unchecked","","",32,[[]]],[11,"from_subset","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any","","",33,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",33,[[]]],[11,"downcast","","",33,[[]]],[11,"upcast","","",33,[[],["option",4]]],[11,"to_subset","","",33,[[],["option",4]]],[11,"is_in_subset","","",33,[[],["bool",15]]],[11,"to_subset_unchecked","","",33,[[]]],[11,"from_subset","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","temple::game::collision","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",34,[[]]],[11,"downcast","","",34,[[]]],[11,"upcast","","",34,[[],["option",4]]],[11,"to_subset","","",34,[[],["option",4]]],[11,"is_in_subset","","",34,[[],["bool",15]]],[11,"to_subset_unchecked","","",34,[[]]],[11,"from_subset","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","temple::game::player","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",35,[[]]],[11,"downcast","","",35,[[]]],[11,"upcast","","",35,[[],["option",4]]],[11,"to_subset","","",35,[[],["option",4]]],[11,"is_in_subset","","",35,[[],["bool",15]]],[11,"to_subset_unchecked","","",35,[[]]],[11,"from_subset","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","temple::game","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",36,[[]]],[11,"downcast","","",36,[[]]],[11,"upcast","","",36,[[],["option",4]]],[11,"to_subset","","",36,[[],["option",4]]],[11,"is_in_subset","","",36,[[],["bool",15]]],[11,"to_subset_unchecked","","",36,[[]]],[11,"from_subset","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","temple::input","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",7,[[]]],[11,"downcast","","",7,[[]]],[11,"upcast","","",7,[[],["option",4]]],[11,"to_subset","","",7,[[],["option",4]]],[11,"is_in_subset","","",7,[[],["bool",15]]],[11,"to_subset_unchecked","","",7,[[]]],[11,"from_subset","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",37,[[]]],[11,"downcast","","",37,[[]]],[11,"upcast","","",37,[[],["option",4]]],[11,"to_subset","","",37,[[],["option",4]]],[11,"is_in_subset","","",37,[[],["bool",15]]],[11,"to_subset_unchecked","","",37,[[]]],[11,"from_subset","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","temple::level::config","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",8,[[]]],[11,"downcast","","",8,[[]]],[11,"upcast","","",8,[[],["option",4]]],[11,"to_subset","","",8,[[],["option",4]]],[11,"is_in_subset","","",8,[[],["bool",15]]],[11,"to_subset_unchecked","","",8,[[]]],[11,"from_subset","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",9,[[]]],[11,"downcast","","",9,[[]]],[11,"upcast","","",9,[[],["option",4]]],[11,"to_subset","","",9,[[],["option",4]]],[11,"is_in_subset","","",9,[[],["bool",15]]],[11,"to_subset_unchecked","","",9,[[]]],[11,"from_subset","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",10,[[]]],[11,"downcast","","",10,[[]]],[11,"upcast","","",10,[[],["option",4]]],[11,"to_subset","","",10,[[],["option",4]]],[11,"is_in_subset","","",10,[[],["bool",15]]],[11,"to_subset_unchecked","","",10,[[]]],[11,"from_subset","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",11,[[]]],[11,"downcast","","",11,[[]]],[11,"upcast","","",11,[[],["option",4]]],[11,"to_subset","","",11,[[],["option",4]]],[11,"is_in_subset","","",11,[[],["bool",15]]],[11,"to_subset_unchecked","","",11,[[]]],[11,"from_subset","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",12,[[]]],[11,"downcast","","",12,[[]]],[11,"upcast","","",12,[[],["option",4]]],[11,"to_subset","","",12,[[],["option",4]]],[11,"is_in_subset","","",12,[[],["bool",15]]],[11,"to_subset_unchecked","","",12,[[]]],[11,"from_subset","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",13,[[]]],[11,"downcast","","",13,[[]]],[11,"upcast","","",13,[[],["option",4]]],[11,"to_subset","","",13,[[],["option",4]]],[11,"is_in_subset","","",13,[[],["bool",15]]],[11,"to_subset_unchecked","","",13,[[]]],[11,"from_subset","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","temple::level::load","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",14,[[]]],[11,"downcast","","",14,[[]]],[11,"upcast","","",14,[[],["option",4]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[],["bool",15]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_any","","",38,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",38,[[]]],[11,"downcast","","",38,[[]]],[11,"upcast","","",38,[[],["option",4]]],[11,"to_subset","","",38,[[],["option",4]]],[11,"is_in_subset","","",38,[[],["bool",15]]],[11,"to_subset_unchecked","","",38,[[]]],[11,"from_subset","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_any","","",39,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",39,[[]]],[11,"downcast","","",39,[[]]],[11,"upcast","","",39,[[],["option",4]]],[11,"to_subset","","",39,[[],["option",4]]],[11,"is_in_subset","","",39,[[],["bool",15]]],[11,"to_subset_unchecked","","",39,[[]]],[11,"from_subset","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",40,[[]]],[11,"downcast","","",40,[[]]],[11,"upcast","","",40,[[],["option",4]]],[11,"to_subset","","",40,[[],["option",4]]],[11,"is_in_subset","","",40,[[],["bool",15]]],[11,"to_subset_unchecked","","",40,[[]]],[11,"from_subset","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","temple::level","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",41,[[]]],[11,"downcast","","",41,[[]]],[11,"upcast","","",41,[[],["option",4]]],[11,"to_subset","","",41,[[],["option",4]]],[11,"is_in_subset","","",41,[[],["bool",15]]],[11,"to_subset_unchecked","","",41,[[]]],[11,"from_subset","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","temple::sprite","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",15,[[]]],[11,"downcast","","",15,[[]]],[11,"upcast","","",15,[[],["option",4]]],[11,"to_subset","","",15,[[],["option",4]]],[11,"is_in_subset","","",15,[[],["bool",15]]],[11,"to_subset_unchecked","","",15,[[]]],[11,"from_subset","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",16,[[]]],[11,"downcast","","",16,[[]]],[11,"upcast","","",16,[[],["option",4]]],[11,"to_subset","","",16,[[],["option",4]]],[11,"is_in_subset","","",16,[[],["bool",15]]],[11,"to_subset_unchecked","","",16,[[]]],[11,"from_subset","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_world","","",17,[[["world",3]]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"clone_type_data","","",17,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",17,[[]]],[11,"downcast","","",17,[[]]],[11,"upcast","","",17,[[],["option",4]]],[11,"to_subset","","",17,[[],["option",4]]],[11,"is_in_subset","","",17,[[],["bool",15]]],[11,"to_subset_unchecked","","",17,[[]]],[11,"from_subset","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"clone_type_data","","",17,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from_resources","","",17,[[["resources",3]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",18,[[]]],[11,"downcast","","",18,[[]]],[11,"upcast","","",18,[[],["option",4]]],[11,"to_subset","","",18,[[],["option",4]]],[11,"is_in_subset","","",18,[[],["bool",15]]],[11,"to_subset_unchecked","","",18,[[]]],[11,"from_subset","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_world","","",19,[[["world",3]]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"clone_type_data","","",19,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",19,[[]]],[11,"downcast","","",19,[[]]],[11,"upcast","","",19,[[],["option",4]]],[11,"to_subset","","",19,[[],["option",4]]],[11,"is_in_subset","","",19,[[],["bool",15]]],[11,"to_subset_unchecked","","",19,[[]]],[11,"from_subset","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"clone_type_data","","",19,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from_resources","","",19,[[["resources",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_world","","",20,[[["world",3]]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"clone_type_data","","",20,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",20,[[]]],[11,"downcast","","",20,[[]]],[11,"upcast","","",20,[[],["option",4]]],[11,"to_subset","","",20,[[],["option",4]]],[11,"is_in_subset","","",20,[[],["bool",15]]],[11,"to_subset_unchecked","","",20,[[]]],[11,"from_subset","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"clone_type_data","","",20,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from_resources","","",20,[[["resources",3]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"as_any","","",21,[[],["any",8]]],[11,"dyn_eq","","",21,[[["dyneq",8]],["bool",15]]],[11,"as_dyn_eq","","",21,[[],["dyneq",8]]],[11,"dyn_hash","","",21,[[["hasher",8]]]],[11,"clone_type_data","","",21,[[],[["typedata",8],["global",3],["box",3]]]],[11,"get_hash","","",21,[[],["u64",15]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",21,[[]]],[11,"equivalent","","",21,[[],["bool",15]]],[11,"get_hash","","",21,[[],["u64",15]]],[11,"downcast","","",21,[[]]],[11,"upcast","","",21,[[],["option",4]]],[11,"to_subset","","",21,[[],["option",4]]],[11,"is_in_subset","","",21,[[],["bool",15]]],[11,"to_subset_unchecked","","",21,[[]]],[11,"from_subset","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"clone_type_data","","",21,[[],[["global",3],["box",3],["typedata",8]]]],[11,"get_hash","","",21,[[],["u64",15]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",42,[[]]],[11,"downcast","","",42,[[]]],[11,"upcast","","",42,[[],["option",4]]],[11,"to_subset","","",42,[[],["option",4]]],[11,"is_in_subset","","",42,[[],["bool",15]]],[11,"to_subset_unchecked","","",42,[[]]],[11,"from_subset","","",42,[[]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","temple::util::cli","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"clone_type_data","","",22,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",22,[[]]],[11,"downcast","","",22,[[]]],[11,"upcast","","",22,[[],["option",4]]],[11,"to_subset","","",22,[[],["option",4]]],[11,"is_in_subset","","",22,[[],["bool",15]]],[11,"to_subset_unchecked","","",22,[[]]],[11,"from_subset","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"clone_type_data","","",22,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from","temple::util::settings","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"as_any","","",23,[[],["any",8]]],[11,"dyn_eq","","",23,[[["dyneq",8]],["bool",15]]],[11,"erased_serialize","","",23,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"clone_type_data","","",23,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",23,[[]]],[11,"equivalent","","",23,[[],["bool",15]]],[11,"downcast","","",23,[[]]],[11,"upcast","","",23,[[],["option",4]]],[11,"to_subset","","",23,[[],["option",4]]],[11,"is_in_subset","","",23,[[],["bool",15]]],[11,"to_subset_unchecked","","",23,[[]]],[11,"from_subset","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"clone_type_data","","",23,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from_world","","",24,[[["world",3]]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"erased_serialize","","",24,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"clone_type_data","","",24,[[],[["typedata",8],["global",3],["box",3]]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",24,[[]]],[11,"downcast","","",24,[[]]],[11,"upcast","","",24,[[],["option",4]]],[11,"to_subset","","",24,[[],["option",4]]],[11,"is_in_subset","","",24,[[],["bool",15]]],[11,"to_subset_unchecked","","",24,[[]]],[11,"from_subset","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"clone_type_data","","",24,[[],[["global",3],["box",3],["typedata",8]]]],[11,"from_resources","","",24,[[["resources",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",25,[[]]],[11,"downcast","","",25,[[]]],[11,"upcast","","",25,[[],["option",4]]],[11,"to_subset","","",25,[[],["option",4]]],[11,"is_in_subset","","",25,[[],["bool",15]]],[11,"to_subset_unchecked","","",25,[[]]],[11,"from_subset","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","temple","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",43,[[]]],[11,"downcast","","",43,[[]]],[11,"upcast","","",43,[[],["option",4]]],[11,"to_subset","","",43,[[],["option",4]]],[11,"is_in_subset","","",43,[[],["bool",15]]],[11,"to_subset_unchecked","","",43,[[]]],[11,"from_subset","","",43,[[]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"build","temple::game::attributes::checkpoint","",0,[[["commands",3],["i32",15],["vec2",3],["entity",3],["vec",3]]]],[11,"build","temple::game::attributes::deadly","",27,[[["commands",3],["i32",15],["vec2",3],["entity",3],["vec",3]]]],[11,"build","temple::game::attributes::moving","",2,[[["commands",3],["i32",15],["vec2",3],["entity",3],["vec",3]]]],[11,"build","temple::game::attributes::player","",4,[[["commands",3],["i32",15],["vec2",3],["entity",3],["vec",3]]]],[11,"build","temple::game::attributes::solid","",29,[[["commands",3],["i32",15],["vec2",3],["entity",3],["vec",3]]]],[11,"into","temple::game::attributes::moving","",1,[[],["vec2",3]]],[11,"clone","","",1,[[],["movingdirection",4]]],[11,"clone","","",3,[[],["movingattributesystemsteps",4]]],[11,"clone","temple::sprite","",17,[[],["spritetype",3]]],[11,"clone","","",19,[[],["spriteentry",3]]],[11,"clone","","",20,[[],["gamesprite",3]]],[11,"clone","","",21,[[],["spritepluginsteps",4]]],[11,"clone","temple::util::cli","",22,[[],["cliargs",3]]],[11,"clone","temple::util::settings","",23,[[],["leveltransistiontype",4]]],[11,"clone","","",24,[[],["gamefile",3]]],[11,"default","temple::game::attributes::moving","",2,[[]]],[11,"default","temple::sprite","",17,[[],["spritetype",3]]],[11,"default","","",19,[[],["spriteentry",3]]],[11,"default","","",20,[[],["gamesprite",3]]],[11,"default","temple::util::settings","",24,[[]]],[11,"eq","temple::game::attributes::moving","",3,[[["movingattributesystemsteps",4]],["bool",15]]],[11,"eq","temple::sprite","",21,[[["spritepluginsteps",4]],["bool",15]]],[11,"eq","temple::util::settings","",23,[[["leveltransistiontype",4]],["bool",15]]],[11,"fmt","temple::game::attributes::moving","",3,[[["formatter",3]],["result",6]]],[11,"fmt","temple::sprite","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","temple::util::cli","",22,[[["formatter",3]],["result",6]]],[11,"hash","temple::game::attributes::moving","",3,[[]]],[11,"hash","temple::sprite","",21,[[]]],[11,"build","temple::game::attributes","",30,[[["appbuilder",3]]]],[11,"build","temple::game::camera","",33,[[["appbuilder",3]]]],[11,"build","temple::game::collision","",34,[[["appbuilder",3]]]],[11,"build","temple::game::player","",35,[[["appbuilder",3]]]],[11,"build","temple::input","",37,[[["appbuilder",3]]]],[11,"build","temple::level","",41,[[["appbuilder",3]]]],[11,"build","temple::sprite","",42,[[["appbuilder",3]]]],[11,"build","temple::game","",36,[[["plugingroupbuilder",3]]]],[11,"dyn_clone","temple::game::attributes::moving","",3,[[],[["box",3],["systemlabel",8]]]],[11,"dyn_clone","temple::sprite","",21,[[],[["box",3],["systemlabel",8]]]],[11,"deserialize","temple::level::config","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","temple::sprite","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","temple::util::settings","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]]],"p":[[3,"Checkpoint"],[4,"MovingDirection"],[3,"MovingSprite"],[4,"MovingAttributeSystemSteps"],[3,"Player"],[8,"Attribute"],[3,"AttributeEntry"],[3,"DevToggleCursor"],[3,"LevelFileVersion"],[3,"LevelFile"],[3,"LevelDefinition"],[3,"LevelSpriteEntry"],[3,"LevelSprite"],[3,"Level"],[3,"LoadLevel"],[3,"SpriteFileVersion"],[3,"SpriteTypesFile"],[3,"SpriteType"],[3,"SpriteFile"],[3,"SpriteEntry"],[3,"GameSprite"],[4,"SpritePluginSteps"],[3,"CliArgs"],[4,"LevelTransistionType"],[3,"GameFile"],[3,"Version"],[3,"PlayerReachedCheckpoint"],[3,"Deadly"],[3,"PlayerDied"],[3,"Solid"],[3,"AttributePlugin"],[3,"CameraTarget"],[3,"MainCamera"],[3,"CameraPlugin"],[3,"CollisionPlugin"],[3,"PlayerPlugin"],[3,"GamePlugins"],[3,"InputPlugin"],[3,"LevelLoadComplete"],[3,"UnloadLevel"],[3,"LevelLoadedSprite"],[3,"LevelPlugin"],[3,"SpritePlugin"],[3,"FpsText"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);