initSidebarItems({"constant":[["SPV_REFLECT_BINDING_NUMBER_DONT_CHANGE",""],["SPV_REFLECT_MAX_ARRAY_DIMS",""],["SPV_REFLECT_MAX_DESCRIPTOR_SETS",""],["SPV_REFLECT_SET_NUMBER_DONT_CHANGE",""],["SPV_REVISION",""],["SPV_VERSION",""],["SpvAccessQualifier__SpvAccessQualifierMax",""],["SpvAccessQualifier__SpvAccessQualifierReadOnly",""],["SpvAccessQualifier__SpvAccessQualifierReadWrite",""],["SpvAccessQualifier__SpvAccessQualifierWriteOnly",""],["SpvAddressingModel__SpvAddressingModelLogical",""],["SpvAddressingModel__SpvAddressingModelMax",""],["SpvAddressingModel__SpvAddressingModelPhysical32",""],["SpvAddressingModel__SpvAddressingModelPhysical64",""],["SpvBuiltIn__SpvBuiltInBaryCoordNV",""],["SpvBuiltIn__SpvBuiltInBaryCoordNoPerspAMD",""],["SpvBuiltIn__SpvBuiltInBaryCoordNoPerspCentroidAMD",""],["SpvBuiltIn__SpvBuiltInBaryCoordNoPerspNV",""],["SpvBuiltIn__SpvBuiltInBaryCoordNoPerspSampleAMD",""],["SpvBuiltIn__SpvBuiltInBaryCoordPullModelAMD",""],["SpvBuiltIn__SpvBuiltInBaryCoordSmoothAMD",""],["SpvBuiltIn__SpvBuiltInBaryCoordSmoothCentroidAMD",""],["SpvBuiltIn__SpvBuiltInBaryCoordSmoothSampleAMD",""],["SpvBuiltIn__SpvBuiltInBaseInstance",""],["SpvBuiltIn__SpvBuiltInBaseVertex",""],["SpvBuiltIn__SpvBuiltInClipDistance",""],["SpvBuiltIn__SpvBuiltInClipDistancePerViewNV",""],["SpvBuiltIn__SpvBuiltInCullDistance",""],["SpvBuiltIn__SpvBuiltInCullDistancePerViewNV",""],["SpvBuiltIn__SpvBuiltInDeviceIndex",""],["SpvBuiltIn__SpvBuiltInDrawIndex",""],["SpvBuiltIn__SpvBuiltInEnqueuedWorkgroupSize",""],["SpvBuiltIn__SpvBuiltInFragCoord",""],["SpvBuiltIn__SpvBuiltInFragDepth",""],["SpvBuiltIn__SpvBuiltInFragInvocationCountEXT",""],["SpvBuiltIn__SpvBuiltInFragSizeEXT",""],["SpvBuiltIn__SpvBuiltInFragStencilRefEXT",""],["SpvBuiltIn__SpvBuiltInFragmentSizeNV",""],["SpvBuiltIn__SpvBuiltInFrontFacing",""],["SpvBuiltIn__SpvBuiltInFullyCoveredEXT",""],["SpvBuiltIn__SpvBuiltInGlobalInvocationId",""],["SpvBuiltIn__SpvBuiltInGlobalLinearId",""],["SpvBuiltIn__SpvBuiltInGlobalOffset",""],["SpvBuiltIn__SpvBuiltInGlobalSize",""],["SpvBuiltIn__SpvBuiltInHelperInvocation",""],["SpvBuiltIn__SpvBuiltInHitKindNV",""],["SpvBuiltIn__SpvBuiltInHitTNV",""],["SpvBuiltIn__SpvBuiltInIncomingRayFlagsNV",""],["SpvBuiltIn__SpvBuiltInInstanceCustomIndexNV",""],["SpvBuiltIn__SpvBuiltInInstanceId",""],["SpvBuiltIn__SpvBuiltInInstanceIndex",""],["SpvBuiltIn__SpvBuiltInInvocationId",""],["SpvBuiltIn__SpvBuiltInInvocationsPerPixelNV",""],["SpvBuiltIn__SpvBuiltInLaunchIdNV",""],["SpvBuiltIn__SpvBuiltInLaunchSizeNV",""],["SpvBuiltIn__SpvBuiltInLayer",""],["SpvBuiltIn__SpvBuiltInLayerPerViewNV",""],["SpvBuiltIn__SpvBuiltInLocalInvocationId",""],["SpvBuiltIn__SpvBuiltInLocalInvocationIndex",""],["SpvBuiltIn__SpvBuiltInMax",""],["SpvBuiltIn__SpvBuiltInMeshViewCountNV",""],["SpvBuiltIn__SpvBuiltInMeshViewIndicesNV",""],["SpvBuiltIn__SpvBuiltInNumEnqueuedSubgroups",""],["SpvBuiltIn__SpvBuiltInNumSubgroups",""],["SpvBuiltIn__SpvBuiltInNumWorkgroups",""],["SpvBuiltIn__SpvBuiltInObjectRayDirectionNV",""],["SpvBuiltIn__SpvBuiltInObjectRayOriginNV",""],["SpvBuiltIn__SpvBuiltInObjectToWorldNV",""],["SpvBuiltIn__SpvBuiltInPatchVertices",""],["SpvBuiltIn__SpvBuiltInPointCoord",""],["SpvBuiltIn__SpvBuiltInPointSize",""],["SpvBuiltIn__SpvBuiltInPosition",""],["SpvBuiltIn__SpvBuiltInPositionPerViewNV",""],["SpvBuiltIn__SpvBuiltInPrimitiveCountNV",""],["SpvBuiltIn__SpvBuiltInPrimitiveId",""],["SpvBuiltIn__SpvBuiltInPrimitiveIndicesNV",""],["SpvBuiltIn__SpvBuiltInRayTmaxNV",""],["SpvBuiltIn__SpvBuiltInRayTminNV",""],["SpvBuiltIn__SpvBuiltInSampleId",""],["SpvBuiltIn__SpvBuiltInSampleMask",""],["SpvBuiltIn__SpvBuiltInSamplePosition",""],["SpvBuiltIn__SpvBuiltInSecondaryPositionNV",""],["SpvBuiltIn__SpvBuiltInSecondaryViewportMaskNV",""],["SpvBuiltIn__SpvBuiltInSubgroupEqMask",""],["SpvBuiltIn__SpvBuiltInSubgroupEqMaskKHR",""],["SpvBuiltIn__SpvBuiltInSubgroupGeMask",""],["SpvBuiltIn__SpvBuiltInSubgroupGeMaskKHR",""],["SpvBuiltIn__SpvBuiltInSubgroupGtMask",""],["SpvBuiltIn__SpvBuiltInSubgroupGtMaskKHR",""],["SpvBuiltIn__SpvBuiltInSubgroupId",""],["SpvBuiltIn__SpvBuiltInSubgroupLeMask",""],["SpvBuiltIn__SpvBuiltInSubgroupLeMaskKHR",""],["SpvBuiltIn__SpvBuiltInSubgroupLocalInvocationId",""],["SpvBuiltIn__SpvBuiltInSubgroupLtMask",""],["SpvBuiltIn__SpvBuiltInSubgroupLtMaskKHR",""],["SpvBuiltIn__SpvBuiltInSubgroupMaxSize",""],["SpvBuiltIn__SpvBuiltInSubgroupSize",""],["SpvBuiltIn__SpvBuiltInTaskCountNV",""],["SpvBuiltIn__SpvBuiltInTessCoord",""],["SpvBuiltIn__SpvBuiltInTessLevelInner",""],["SpvBuiltIn__SpvBuiltInTessLevelOuter",""],["SpvBuiltIn__SpvBuiltInVertexId",""],["SpvBuiltIn__SpvBuiltInVertexIndex",""],["SpvBuiltIn__SpvBuiltInViewIndex",""],["SpvBuiltIn__SpvBuiltInViewportIndex",""],["SpvBuiltIn__SpvBuiltInViewportMaskNV",""],["SpvBuiltIn__SpvBuiltInViewportMaskPerViewNV",""],["SpvBuiltIn__SpvBuiltInWorkDim",""],["SpvBuiltIn__SpvBuiltInWorkgroupId",""],["SpvBuiltIn__SpvBuiltInWorkgroupSize",""],["SpvBuiltIn__SpvBuiltInWorldRayDirectionNV",""],["SpvBuiltIn__SpvBuiltInWorldRayOriginNV",""],["SpvBuiltIn__SpvBuiltInWorldToObjectNV",""],["SpvCapability__SpvCapabilityAddresses",""],["SpvCapability__SpvCapabilityAtomicStorage",""],["SpvCapability__SpvCapabilityAtomicStorageOps",""],["SpvCapability__SpvCapabilityClipDistance",""],["SpvCapability__SpvCapabilityComputeDerivativeGroupLinearNV",""],["SpvCapability__SpvCapabilityComputeDerivativeGroupQuadsNV",""],["SpvCapability__SpvCapabilityCullDistance",""],["SpvCapability__SpvCapabilityDenormFlushToZero",""],["SpvCapability__SpvCapabilityDenormPreserve",""],["SpvCapability__SpvCapabilityDerivativeControl",""],["SpvCapability__SpvCapabilityDeviceEnqueue",""],["SpvCapability__SpvCapabilityDeviceGroup",""],["SpvCapability__SpvCapabilityDrawParameters",""],["SpvCapability__SpvCapabilityFloat16",""],["SpvCapability__SpvCapabilityFloat16Buffer",""],["SpvCapability__SpvCapabilityFloat16ImageAMD",""],["SpvCapability__SpvCapabilityFloat64",""],["SpvCapability__SpvCapabilityFragmentBarycentricNV",""],["SpvCapability__SpvCapabilityFragmentDensityEXT",""],["SpvCapability__SpvCapabilityFragmentFullyCoveredEXT",""],["SpvCapability__SpvCapabilityFragmentMaskAMD",""],["SpvCapability__SpvCapabilityGenericPointer",""],["SpvCapability__SpvCapabilityGeometry",""],["SpvCapability__SpvCapabilityGeometryPointSize",""],["SpvCapability__SpvCapabilityGeometryShaderPassthroughNV",""],["SpvCapability__SpvCapabilityGeometryStreams",""],["SpvCapability__SpvCapabilityGroupNonUniform",""],["SpvCapability__SpvCapabilityGroupNonUniformArithmetic",""],["SpvCapability__SpvCapabilityGroupNonUniformBallot",""],["SpvCapability__SpvCapabilityGroupNonUniformClustered",""],["SpvCapability__SpvCapabilityGroupNonUniformPartitionedNV",""],["SpvCapability__SpvCapabilityGroupNonUniformQuad",""],["SpvCapability__SpvCapabilityGroupNonUniformShuffle",""],["SpvCapability__SpvCapabilityGroupNonUniformShuffleRelative",""],["SpvCapability__SpvCapabilityGroupNonUniformVote",""],["SpvCapability__SpvCapabilityGroups",""],["SpvCapability__SpvCapabilityImage1D",""],["SpvCapability__SpvCapabilityImageBasic",""],["SpvCapability__SpvCapabilityImageBuffer",""],["SpvCapability__SpvCapabilityImageCubeArray",""],["SpvCapability__SpvCapabilityImageFootprintNV",""],["SpvCapability__SpvCapabilityImageGatherBiasLodAMD",""],["SpvCapability__SpvCapabilityImageGatherExtended",""],["SpvCapability__SpvCapabilityImageMSArray",""],["SpvCapability__SpvCapabilityImageMipmap",""],["SpvCapability__SpvCapabilityImageQuery",""],["SpvCapability__SpvCapabilityImageReadWrite",""],["SpvCapability__SpvCapabilityImageReadWriteLodAMD",""],["SpvCapability__SpvCapabilityImageRect",""],["SpvCapability__SpvCapabilityInputAttachment",""],["SpvCapability__SpvCapabilityInputAttachmentArrayDynamicIndexingEXT",""],["SpvCapability__SpvCapabilityInputAttachmentArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilityInt16",""],["SpvCapability__SpvCapabilityInt64",""],["SpvCapability__SpvCapabilityInt64Atomics",""],["SpvCapability__SpvCapabilityInt8",""],["SpvCapability__SpvCapabilityInterpolationFunction",""],["SpvCapability__SpvCapabilityKernel",""],["SpvCapability__SpvCapabilityLinkage",""],["SpvCapability__SpvCapabilityLiteralSampler",""],["SpvCapability__SpvCapabilityMatrix",""],["SpvCapability__SpvCapabilityMax",""],["SpvCapability__SpvCapabilityMeshShadingNV",""],["SpvCapability__SpvCapabilityMinLod",""],["SpvCapability__SpvCapabilityMultiView",""],["SpvCapability__SpvCapabilityMultiViewport",""],["SpvCapability__SpvCapabilityNamedBarrier",""],["SpvCapability__SpvCapabilityPerViewAttributesNV",""],["SpvCapability__SpvCapabilityPipeStorage",""],["SpvCapability__SpvCapabilityPipes",""],["SpvCapability__SpvCapabilityRayTracingNV",""],["SpvCapability__SpvCapabilityRoundingModeRTE",""],["SpvCapability__SpvCapabilityRoundingModeRTZ",""],["SpvCapability__SpvCapabilityRuntimeDescriptorArrayEXT",""],["SpvCapability__SpvCapabilitySampleMaskOverrideCoverageNV",""],["SpvCapability__SpvCapabilitySampleMaskPostDepthCoverage",""],["SpvCapability__SpvCapabilitySampleRateShading",""],["SpvCapability__SpvCapabilitySampled1D",""],["SpvCapability__SpvCapabilitySampledBuffer",""],["SpvCapability__SpvCapabilitySampledCubeArray",""],["SpvCapability__SpvCapabilitySampledImageArrayDynamicIndexing",""],["SpvCapability__SpvCapabilitySampledImageArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilitySampledRect",""],["SpvCapability__SpvCapabilityShader",""],["SpvCapability__SpvCapabilityShaderNonUniformEXT",""],["SpvCapability__SpvCapabilityShaderStereoViewNV",""],["SpvCapability__SpvCapabilityShaderViewportIndexLayerEXT",""],["SpvCapability__SpvCapabilityShaderViewportIndexLayerNV",""],["SpvCapability__SpvCapabilityShaderViewportMaskNV",""],["SpvCapability__SpvCapabilityShadingRateNV",""],["SpvCapability__SpvCapabilitySignedZeroInfNanPreserve",""],["SpvCapability__SpvCapabilitySparseResidency",""],["SpvCapability__SpvCapabilityStencilExportEXT",""],["SpvCapability__SpvCapabilityStorageBuffer16BitAccess",""],["SpvCapability__SpvCapabilityStorageBuffer8BitAccess",""],["SpvCapability__SpvCapabilityStorageBufferArrayDynamicIndexing",""],["SpvCapability__SpvCapabilityStorageBufferArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilityStorageImageArrayDynamicIndexing",""],["SpvCapability__SpvCapabilityStorageImageArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilityStorageImageExtendedFormats",""],["SpvCapability__SpvCapabilityStorageImageMultisample",""],["SpvCapability__SpvCapabilityStorageImageReadWithoutFormat",""],["SpvCapability__SpvCapabilityStorageImageWriteWithoutFormat",""],["SpvCapability__SpvCapabilityStorageInputOutput16",""],["SpvCapability__SpvCapabilityStoragePushConstant16",""],["SpvCapability__SpvCapabilityStoragePushConstant8",""],["SpvCapability__SpvCapabilityStorageTexelBufferArrayDynamicIndexingEXT",""],["SpvCapability__SpvCapabilityStorageTexelBufferArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilityStorageUniform16",""],["SpvCapability__SpvCapabilityStorageUniformBufferBlock16",""],["SpvCapability__SpvCapabilitySubgroupBallotKHR",""],["SpvCapability__SpvCapabilitySubgroupBufferBlockIOINTEL",""],["SpvCapability__SpvCapabilitySubgroupDispatch",""],["SpvCapability__SpvCapabilitySubgroupImageBlockIOINTEL",""],["SpvCapability__SpvCapabilitySubgroupShuffleINTEL",""],["SpvCapability__SpvCapabilitySubgroupVoteKHR",""],["SpvCapability__SpvCapabilityTessellation",""],["SpvCapability__SpvCapabilityTessellationPointSize",""],["SpvCapability__SpvCapabilityTransformFeedback",""],["SpvCapability__SpvCapabilityUniformAndStorageBuffer16BitAccess",""],["SpvCapability__SpvCapabilityUniformAndStorageBuffer8BitAccess",""],["SpvCapability__SpvCapabilityUniformBufferArrayDynamicIndexing",""],["SpvCapability__SpvCapabilityUniformBufferArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilityUniformTexelBufferArrayDynamicIndexingEXT",""],["SpvCapability__SpvCapabilityUniformTexelBufferArrayNonUniformIndexingEXT",""],["SpvCapability__SpvCapabilityVariablePointers",""],["SpvCapability__SpvCapabilityVariablePointersStorageBuffer",""],["SpvCapability__SpvCapabilityVector16",""],["SpvCapability__SpvCapabilityVulkanMemoryModelDeviceScopeKHR",""],["SpvCapability__SpvCapabilityVulkanMemoryModelKHR",""],["SpvDecoration__SpvDecorationAliased",""],["SpvDecoration__SpvDecorationAlignment",""],["SpvDecoration__SpvDecorationAlignmentId",""],["SpvDecoration__SpvDecorationArrayStride",""],["SpvDecoration__SpvDecorationBinding",""],["SpvDecoration__SpvDecorationBlock",""],["SpvDecoration__SpvDecorationBufferBlock",""],["SpvDecoration__SpvDecorationBuiltIn",""],["SpvDecoration__SpvDecorationCPacked",""],["SpvDecoration__SpvDecorationCentroid",""],["SpvDecoration__SpvDecorationCoherent",""],["SpvDecoration__SpvDecorationColMajor",""],["SpvDecoration__SpvDecorationComponent",""],["SpvDecoration__SpvDecorationConstant",""],["SpvDecoration__SpvDecorationDescriptorSet",""],["SpvDecoration__SpvDecorationExplicitInterpAMD",""],["SpvDecoration__SpvDecorationFPFastMathMode",""],["SpvDecoration__SpvDecorationFPRoundingMode",""],["SpvDecoration__SpvDecorationFlat",""],["SpvDecoration__SpvDecorationFuncParamAttr",""],["SpvDecoration__SpvDecorationGLSLPacked",""],["SpvDecoration__SpvDecorationGLSLShared",""],["SpvDecoration__SpvDecorationHlslCounterBufferGOOGLE",""],["SpvDecoration__SpvDecorationHlslSemanticGOOGLE",""],["SpvDecoration__SpvDecorationIndex",""],["SpvDecoration__SpvDecorationInputAttachmentIndex",""],["SpvDecoration__SpvDecorationInvariant",""],["SpvDecoration__SpvDecorationLinkageAttributes",""],["SpvDecoration__SpvDecorationLocation",""],["SpvDecoration__SpvDecorationMatrixStride",""],["SpvDecoration__SpvDecorationMax",""],["SpvDecoration__SpvDecorationMaxByteOffset",""],["SpvDecoration__SpvDecorationMaxByteOffsetId",""],["SpvDecoration__SpvDecorationNoContraction",""],["SpvDecoration__SpvDecorationNoPerspective",""],["SpvDecoration__SpvDecorationNoSignedWrap",""],["SpvDecoration__SpvDecorationNoUnsignedWrap",""],["SpvDecoration__SpvDecorationNonReadable",""],["SpvDecoration__SpvDecorationNonUniformEXT",""],["SpvDecoration__SpvDecorationNonWritable",""],["SpvDecoration__SpvDecorationOffset",""],["SpvDecoration__SpvDecorationOverrideCoverageNV",""],["SpvDecoration__SpvDecorationPassthroughNV",""],["SpvDecoration__SpvDecorationPatch",""],["SpvDecoration__SpvDecorationPerPrimitiveNV",""],["SpvDecoration__SpvDecorationPerTaskNV",""],["SpvDecoration__SpvDecorationPerVertexNV",""],["SpvDecoration__SpvDecorationPerViewNV",""],["SpvDecoration__SpvDecorationRelaxedPrecision",""],["SpvDecoration__SpvDecorationRestrict",""],["SpvDecoration__SpvDecorationRowMajor",""],["SpvDecoration__SpvDecorationSample",""],["SpvDecoration__SpvDecorationSaturatedConversion",""],["SpvDecoration__SpvDecorationSecondaryViewportRelativeNV",""],["SpvDecoration__SpvDecorationSpecId",""],["SpvDecoration__SpvDecorationStream",""],["SpvDecoration__SpvDecorationUniform",""],["SpvDecoration__SpvDecorationViewportRelativeNV",""],["SpvDecoration__SpvDecorationVolatile",""],["SpvDecoration__SpvDecorationXfbBuffer",""],["SpvDecoration__SpvDecorationXfbStride",""],["SpvDim__SpvDim1D",""],["SpvDim__SpvDim2D",""],["SpvDim__SpvDim3D",""],["SpvDim__SpvDimBuffer",""],["SpvDim__SpvDimCube",""],["SpvDim__SpvDimMax",""],["SpvDim__SpvDimRect",""],["SpvDim__SpvDimSubpassData",""],["SpvExecutionMode__SpvExecutionModeContractionOff",""],["SpvExecutionMode__SpvExecutionModeDenormFlushToZero",""],["SpvExecutionMode__SpvExecutionModeDenormPreserve",""],["SpvExecutionMode__SpvExecutionModeDepthGreater",""],["SpvExecutionMode__SpvExecutionModeDepthLess",""],["SpvExecutionMode__SpvExecutionModeDepthReplacing",""],["SpvExecutionMode__SpvExecutionModeDepthUnchanged",""],["SpvExecutionMode__SpvExecutionModeDerivativeGroupLinearNV",""],["SpvExecutionMode__SpvExecutionModeDerivativeGroupQuadsNV",""],["SpvExecutionMode__SpvExecutionModeEarlyFragmentTests",""],["SpvExecutionMode__SpvExecutionModeFinalizer",""],["SpvExecutionMode__SpvExecutionModeInitializer",""],["SpvExecutionMode__SpvExecutionModeInputLines",""],["SpvExecutionMode__SpvExecutionModeInputLinesAdjacency",""],["SpvExecutionMode__SpvExecutionModeInputPoints",""],["SpvExecutionMode__SpvExecutionModeInputTrianglesAdjacency",""],["SpvExecutionMode__SpvExecutionModeInvocations",""],["SpvExecutionMode__SpvExecutionModeIsolines",""],["SpvExecutionMode__SpvExecutionModeLocalSize",""],["SpvExecutionMode__SpvExecutionModeLocalSizeHint",""],["SpvExecutionMode__SpvExecutionModeLocalSizeHintId",""],["SpvExecutionMode__SpvExecutionModeLocalSizeId",""],["SpvExecutionMode__SpvExecutionModeMax",""],["SpvExecutionMode__SpvExecutionModeOriginLowerLeft",""],["SpvExecutionMode__SpvExecutionModeOriginUpperLeft",""],["SpvExecutionMode__SpvExecutionModeOutputLineStrip",""],["SpvExecutionMode__SpvExecutionModeOutputLinesNV",""],["SpvExecutionMode__SpvExecutionModeOutputPoints",""],["SpvExecutionMode__SpvExecutionModeOutputPrimitivesNV",""],["SpvExecutionMode__SpvExecutionModeOutputTriangleStrip",""],["SpvExecutionMode__SpvExecutionModeOutputTrianglesNV",""],["SpvExecutionMode__SpvExecutionModeOutputVertices",""],["SpvExecutionMode__SpvExecutionModePixelCenterInteger",""],["SpvExecutionMode__SpvExecutionModePointMode",""],["SpvExecutionMode__SpvExecutionModePostDepthCoverage",""],["SpvExecutionMode__SpvExecutionModeQuads",""],["SpvExecutionMode__SpvExecutionModeRoundingModeRTE",""],["SpvExecutionMode__SpvExecutionModeRoundingModeRTZ",""],["SpvExecutionMode__SpvExecutionModeSignedZeroInfNanPreserve",""],["SpvExecutionMode__SpvExecutionModeSpacingEqual",""],["SpvExecutionMode__SpvExecutionModeSpacingFractionalEven",""],["SpvExecutionMode__SpvExecutionModeSpacingFractionalOdd",""],["SpvExecutionMode__SpvExecutionModeStencilRefReplacingEXT",""],["SpvExecutionMode__SpvExecutionModeSubgroupSize",""],["SpvExecutionMode__SpvExecutionModeSubgroupsPerWorkgroup",""],["SpvExecutionMode__SpvExecutionModeSubgroupsPerWorkgroupId",""],["SpvExecutionMode__SpvExecutionModeTriangles",""],["SpvExecutionMode__SpvExecutionModeVecTypeHint",""],["SpvExecutionMode__SpvExecutionModeVertexOrderCcw",""],["SpvExecutionMode__SpvExecutionModeVertexOrderCw",""],["SpvExecutionMode__SpvExecutionModeXfb",""],["SpvExecutionModel__SpvExecutionModelAnyHitNV",""],["SpvExecutionModel__SpvExecutionModelCallableNV",""],["SpvExecutionModel__SpvExecutionModelClosestHitNV",""],["SpvExecutionModel__SpvExecutionModelFragment",""],["SpvExecutionModel__SpvExecutionModelGLCompute",""],["SpvExecutionModel__SpvExecutionModelGeometry",""],["SpvExecutionModel__SpvExecutionModelIntersectionNV",""],["SpvExecutionModel__SpvExecutionModelKernel",""],["SpvExecutionModel__SpvExecutionModelMax",""],["SpvExecutionModel__SpvExecutionModelMeshNV",""],["SpvExecutionModel__SpvExecutionModelMissNV",""],["SpvExecutionModel__SpvExecutionModelRayGenerationNV",""],["SpvExecutionModel__SpvExecutionModelTaskNV",""],["SpvExecutionModel__SpvExecutionModelTessellationControl",""],["SpvExecutionModel__SpvExecutionModelTessellationEvaluation",""],["SpvExecutionModel__SpvExecutionModelVertex",""],["SpvFPFastMathModeMask__SpvFPFastMathModeAllowRecipMask",""],["SpvFPFastMathModeMask__SpvFPFastMathModeFastMask",""],["SpvFPFastMathModeMask__SpvFPFastMathModeMaskNone",""],["SpvFPFastMathModeMask__SpvFPFastMathModeNSZMask",""],["SpvFPFastMathModeMask__SpvFPFastMathModeNotInfMask",""],["SpvFPFastMathModeMask__SpvFPFastMathModeNotNaNMask",""],["SpvFPFastMathModeShift__SpvFPFastMathModeAllowRecipShift",""],["SpvFPFastMathModeShift__SpvFPFastMathModeFastShift",""],["SpvFPFastMathModeShift__SpvFPFastMathModeMax",""],["SpvFPFastMathModeShift__SpvFPFastMathModeNSZShift",""],["SpvFPFastMathModeShift__SpvFPFastMathModeNotInfShift",""],["SpvFPFastMathModeShift__SpvFPFastMathModeNotNaNShift",""],["SpvFPRoundingMode__SpvFPRoundingModeMax",""],["SpvFPRoundingMode__SpvFPRoundingModeRTE",""],["SpvFPRoundingMode__SpvFPRoundingModeRTN",""],["SpvFPRoundingMode__SpvFPRoundingModeRTP",""],["SpvFPRoundingMode__SpvFPRoundingModeRTZ",""],["SpvFunctionControlMask__SpvFunctionControlConstMask",""],["SpvFunctionControlMask__SpvFunctionControlDontInlineMask",""],["SpvFunctionControlMask__SpvFunctionControlInlineMask",""],["SpvFunctionControlMask__SpvFunctionControlMaskNone",""],["SpvFunctionControlMask__SpvFunctionControlPureMask",""],["SpvFunctionControlShift__SpvFunctionControlConstShift",""],["SpvFunctionControlShift__SpvFunctionControlDontInlineShift",""],["SpvFunctionControlShift__SpvFunctionControlInlineShift",""],["SpvFunctionControlShift__SpvFunctionControlMax",""],["SpvFunctionControlShift__SpvFunctionControlPureShift",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeByVal",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeMax",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeNoAlias",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeNoCapture",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeNoReadWrite",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeNoWrite",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeSext",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeSret",""],["SpvFunctionParameterAttribute__SpvFunctionParameterAttributeZext",""],["SpvGroupOperation__SpvGroupOperationClusteredReduce",""],["SpvGroupOperation__SpvGroupOperationExclusiveScan",""],["SpvGroupOperation__SpvGroupOperationInclusiveScan",""],["SpvGroupOperation__SpvGroupOperationMax",""],["SpvGroupOperation__SpvGroupOperationPartitionedExclusiveScanNV",""],["SpvGroupOperation__SpvGroupOperationPartitionedInclusiveScanNV",""],["SpvGroupOperation__SpvGroupOperationPartitionedReduceNV",""],["SpvGroupOperation__SpvGroupOperationReduce",""],["SpvImageChannelDataType__SpvImageChannelDataTypeFloat",""],["SpvImageChannelDataType__SpvImageChannelDataTypeHalfFloat",""],["SpvImageChannelDataType__SpvImageChannelDataTypeMax",""],["SpvImageChannelDataType__SpvImageChannelDataTypeSignedInt16",""],["SpvImageChannelDataType__SpvImageChannelDataTypeSignedInt32",""],["SpvImageChannelDataType__SpvImageChannelDataTypeSignedInt8",""],["SpvImageChannelDataType__SpvImageChannelDataTypeSnormInt16",""],["SpvImageChannelDataType__SpvImageChannelDataTypeSnormInt8",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormInt101010",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormInt101010_2",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormInt16",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormInt24",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormInt8",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormShort555",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnormShort565",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnsignedInt16",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnsignedInt32",""],["SpvImageChannelDataType__SpvImageChannelDataTypeUnsignedInt8",""],["SpvImageChannelOrder__SpvImageChannelOrderA",""],["SpvImageChannelOrder__SpvImageChannelOrderABGR",""],["SpvImageChannelOrder__SpvImageChannelOrderARGB",""],["SpvImageChannelOrder__SpvImageChannelOrderBGRA",""],["SpvImageChannelOrder__SpvImageChannelOrderDepth",""],["SpvImageChannelOrder__SpvImageChannelOrderDepthStencil",""],["SpvImageChannelOrder__SpvImageChannelOrderIntensity",""],["SpvImageChannelOrder__SpvImageChannelOrderLuminance",""],["SpvImageChannelOrder__SpvImageChannelOrderMax",""],["SpvImageChannelOrder__SpvImageChannelOrderR",""],["SpvImageChannelOrder__SpvImageChannelOrderRA",""],["SpvImageChannelOrder__SpvImageChannelOrderRG",""],["SpvImageChannelOrder__SpvImageChannelOrderRGB",""],["SpvImageChannelOrder__SpvImageChannelOrderRGBA",""],["SpvImageChannelOrder__SpvImageChannelOrderRGBx",""],["SpvImageChannelOrder__SpvImageChannelOrderRGx",""],["SpvImageChannelOrder__SpvImageChannelOrderRx",""],["SpvImageChannelOrder__SpvImageChannelOrdersBGRA",""],["SpvImageChannelOrder__SpvImageChannelOrdersRGB",""],["SpvImageChannelOrder__SpvImageChannelOrdersRGBA",""],["SpvImageChannelOrder__SpvImageChannelOrdersRGBx",""],["SpvImageFormat__SpvImageFormatMax",""],["SpvImageFormat__SpvImageFormatR11fG11fB10f",""],["SpvImageFormat__SpvImageFormatR16",""],["SpvImageFormat__SpvImageFormatR16Snorm",""],["SpvImageFormat__SpvImageFormatR16f",""],["SpvImageFormat__SpvImageFormatR16i",""],["SpvImageFormat__SpvImageFormatR16ui",""],["SpvImageFormat__SpvImageFormatR32f",""],["SpvImageFormat__SpvImageFormatR32i",""],["SpvImageFormat__SpvImageFormatR32ui",""],["SpvImageFormat__SpvImageFormatR8",""],["SpvImageFormat__SpvImageFormatR8Snorm",""],["SpvImageFormat__SpvImageFormatR8i",""],["SpvImageFormat__SpvImageFormatR8ui",""],["SpvImageFormat__SpvImageFormatRg16",""],["SpvImageFormat__SpvImageFormatRg16Snorm",""],["SpvImageFormat__SpvImageFormatRg16f",""],["SpvImageFormat__SpvImageFormatRg16i",""],["SpvImageFormat__SpvImageFormatRg16ui",""],["SpvImageFormat__SpvImageFormatRg32f",""],["SpvImageFormat__SpvImageFormatRg32i",""],["SpvImageFormat__SpvImageFormatRg32ui",""],["SpvImageFormat__SpvImageFormatRg8",""],["SpvImageFormat__SpvImageFormatRg8Snorm",""],["SpvImageFormat__SpvImageFormatRg8i",""],["SpvImageFormat__SpvImageFormatRg8ui",""],["SpvImageFormat__SpvImageFormatRgb10A2",""],["SpvImageFormat__SpvImageFormatRgb10a2ui",""],["SpvImageFormat__SpvImageFormatRgba16",""],["SpvImageFormat__SpvImageFormatRgba16Snorm",""],["SpvImageFormat__SpvImageFormatRgba16f",""],["SpvImageFormat__SpvImageFormatRgba16i",""],["SpvImageFormat__SpvImageFormatRgba16ui",""],["SpvImageFormat__SpvImageFormatRgba32f",""],["SpvImageFormat__SpvImageFormatRgba32i",""],["SpvImageFormat__SpvImageFormatRgba32ui",""],["SpvImageFormat__SpvImageFormatRgba8",""],["SpvImageFormat__SpvImageFormatRgba8Snorm",""],["SpvImageFormat__SpvImageFormatRgba8i",""],["SpvImageFormat__SpvImageFormatRgba8ui",""],["SpvImageFormat__SpvImageFormatUnknown",""],["SpvImageOperandsMask__SpvImageOperandsBiasMask",""],["SpvImageOperandsMask__SpvImageOperandsConstOffsetMask",""],["SpvImageOperandsMask__SpvImageOperandsConstOffsetsMask",""],["SpvImageOperandsMask__SpvImageOperandsGradMask",""],["SpvImageOperandsMask__SpvImageOperandsLodMask",""],["SpvImageOperandsMask__SpvImageOperandsMakeTexelAvailableKHRMask",""],["SpvImageOperandsMask__SpvImageOperandsMakeTexelVisibleKHRMask",""],["SpvImageOperandsMask__SpvImageOperandsMaskNone",""],["SpvImageOperandsMask__SpvImageOperandsMinLodMask",""],["SpvImageOperandsMask__SpvImageOperandsNonPrivateTexelKHRMask",""],["SpvImageOperandsMask__SpvImageOperandsOffsetMask",""],["SpvImageOperandsMask__SpvImageOperandsSampleMask",""],["SpvImageOperandsMask__SpvImageOperandsVolatileTexelKHRMask",""],["SpvImageOperandsShift__SpvImageOperandsBiasShift",""],["SpvImageOperandsShift__SpvImageOperandsConstOffsetShift",""],["SpvImageOperandsShift__SpvImageOperandsConstOffsetsShift",""],["SpvImageOperandsShift__SpvImageOperandsGradShift",""],["SpvImageOperandsShift__SpvImageOperandsLodShift",""],["SpvImageOperandsShift__SpvImageOperandsMakeTexelAvailableKHRShift",""],["SpvImageOperandsShift__SpvImageOperandsMakeTexelVisibleKHRShift",""],["SpvImageOperandsShift__SpvImageOperandsMax",""],["SpvImageOperandsShift__SpvImageOperandsMinLodShift",""],["SpvImageOperandsShift__SpvImageOperandsNonPrivateTexelKHRShift",""],["SpvImageOperandsShift__SpvImageOperandsOffsetShift",""],["SpvImageOperandsShift__SpvImageOperandsSampleShift",""],["SpvImageOperandsShift__SpvImageOperandsVolatileTexelKHRShift",""],["SpvKernelEnqueueFlags__SpvKernelEnqueueFlagsMax",""],["SpvKernelEnqueueFlags__SpvKernelEnqueueFlagsNoWait",""],["SpvKernelEnqueueFlags__SpvKernelEnqueueFlagsWaitKernel",""],["SpvKernelEnqueueFlags__SpvKernelEnqueueFlagsWaitWorkGroup",""],["SpvKernelProfilingInfoMask__SpvKernelProfilingInfoCmdExecTimeMask",""],["SpvKernelProfilingInfoMask__SpvKernelProfilingInfoMaskNone",""],["SpvKernelProfilingInfoShift__SpvKernelProfilingInfoCmdExecTimeShift",""],["SpvKernelProfilingInfoShift__SpvKernelProfilingInfoMax",""],["SpvLinkageType__SpvLinkageTypeExport",""],["SpvLinkageType__SpvLinkageTypeImport",""],["SpvLinkageType__SpvLinkageTypeMax",""],["SpvLoopControlMask__SpvLoopControlDependencyInfiniteMask",""],["SpvLoopControlMask__SpvLoopControlDependencyLengthMask",""],["SpvLoopControlMask__SpvLoopControlDontUnrollMask",""],["SpvLoopControlMask__SpvLoopControlMaskNone",""],["SpvLoopControlMask__SpvLoopControlUnrollMask",""],["SpvLoopControlShift__SpvLoopControlDependencyInfiniteShift",""],["SpvLoopControlShift__SpvLoopControlDependencyLengthShift",""],["SpvLoopControlShift__SpvLoopControlDontUnrollShift",""],["SpvLoopControlShift__SpvLoopControlMax",""],["SpvLoopControlShift__SpvLoopControlUnrollShift",""],["SpvMemoryAccessMask__SpvMemoryAccessAlignedMask",""],["SpvMemoryAccessMask__SpvMemoryAccessMakePointerAvailableKHRMask",""],["SpvMemoryAccessMask__SpvMemoryAccessMakePointerVisibleKHRMask",""],["SpvMemoryAccessMask__SpvMemoryAccessMaskNone",""],["SpvMemoryAccessMask__SpvMemoryAccessNonPrivatePointerKHRMask",""],["SpvMemoryAccessMask__SpvMemoryAccessNontemporalMask",""],["SpvMemoryAccessMask__SpvMemoryAccessVolatileMask",""],["SpvMemoryAccessShift__SpvMemoryAccessAlignedShift",""],["SpvMemoryAccessShift__SpvMemoryAccessMakePointerAvailableKHRShift",""],["SpvMemoryAccessShift__SpvMemoryAccessMakePointerVisibleKHRShift",""],["SpvMemoryAccessShift__SpvMemoryAccessMax",""],["SpvMemoryAccessShift__SpvMemoryAccessNonPrivatePointerKHRShift",""],["SpvMemoryAccessShift__SpvMemoryAccessNontemporalShift",""],["SpvMemoryAccessShift__SpvMemoryAccessVolatileShift",""],["SpvMemoryModel__SpvMemoryModelGLSL450",""],["SpvMemoryModel__SpvMemoryModelMax",""],["SpvMemoryModel__SpvMemoryModelOpenCL",""],["SpvMemoryModel__SpvMemoryModelSimple",""],["SpvMemoryModel__SpvMemoryModelVulkanKHR",""],["SpvMemorySemanticsMask__SpvMemorySemanticsAcquireMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsAcquireReleaseMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsAtomicCounterMemoryMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsCrossWorkgroupMemoryMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsImageMemoryMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsMakeAvailableKHRMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsMakeVisibleKHRMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsMaskNone",""],["SpvMemorySemanticsMask__SpvMemorySemanticsOutputMemoryKHRMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsReleaseMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsSequentiallyConsistentMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsSubgroupMemoryMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsUniformMemoryMask",""],["SpvMemorySemanticsMask__SpvMemorySemanticsWorkgroupMemoryMask",""],["SpvMemorySemanticsShift__SpvMemorySemanticsAcquireReleaseShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsAcquireShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsAtomicCounterMemoryShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsCrossWorkgroupMemoryShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsImageMemoryShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsMakeAvailableKHRShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsMakeVisibleKHRShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsMax",""],["SpvMemorySemanticsShift__SpvMemorySemanticsOutputMemoryKHRShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsReleaseShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsSequentiallyConsistentShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsSubgroupMemoryShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsUniformMemoryShift",""],["SpvMemorySemanticsShift__SpvMemorySemanticsWorkgroupMemoryShift",""],["SpvOp__SpvOpAccessChain",""],["SpvOp__SpvOpAll",""],["SpvOp__SpvOpAny",""],["SpvOp__SpvOpArrayLength",""],["SpvOp__SpvOpAtomicAnd",""],["SpvOp__SpvOpAtomicCompareExchange",""],["SpvOp__SpvOpAtomicCompareExchangeWeak",""],["SpvOp__SpvOpAtomicExchange",""],["SpvOp__SpvOpAtomicFlagClear",""],["SpvOp__SpvOpAtomicFlagTestAndSet",""],["SpvOp__SpvOpAtomicIAdd",""],["SpvOp__SpvOpAtomicIDecrement",""],["SpvOp__SpvOpAtomicIIncrement",""],["SpvOp__SpvOpAtomicISub",""],["SpvOp__SpvOpAtomicLoad",""],["SpvOp__SpvOpAtomicOr",""],["SpvOp__SpvOpAtomicSMax",""],["SpvOp__SpvOpAtomicSMin",""],["SpvOp__SpvOpAtomicStore",""],["SpvOp__SpvOpAtomicUMax",""],["SpvOp__SpvOpAtomicUMin",""],["SpvOp__SpvOpAtomicXor",""],["SpvOp__SpvOpBitCount",""],["SpvOp__SpvOpBitFieldInsert",""],["SpvOp__SpvOpBitFieldSExtract",""],["SpvOp__SpvOpBitFieldUExtract",""],["SpvOp__SpvOpBitReverse",""],["SpvOp__SpvOpBitcast",""],["SpvOp__SpvOpBitwiseAnd",""],["SpvOp__SpvOpBitwiseOr",""],["SpvOp__SpvOpBitwiseXor",""],["SpvOp__SpvOpBranch",""],["SpvOp__SpvOpBranchConditional",""],["SpvOp__SpvOpBuildNDRange",""],["SpvOp__SpvOpCapability",""],["SpvOp__SpvOpCaptureEventProfilingInfo",""],["SpvOp__SpvOpCommitReadPipe",""],["SpvOp__SpvOpCommitWritePipe",""],["SpvOp__SpvOpCompositeConstruct",""],["SpvOp__SpvOpCompositeExtract",""],["SpvOp__SpvOpCompositeInsert",""],["SpvOp__SpvOpConstant",""],["SpvOp__SpvOpConstantComposite",""],["SpvOp__SpvOpConstantFalse",""],["SpvOp__SpvOpConstantNull",""],["SpvOp__SpvOpConstantPipeStorage",""],["SpvOp__SpvOpConstantSampler",""],["SpvOp__SpvOpConstantTrue",""],["SpvOp__SpvOpControlBarrier",""],["SpvOp__SpvOpConvertFToS",""],["SpvOp__SpvOpConvertFToU",""],["SpvOp__SpvOpConvertPtrToU",""],["SpvOp__SpvOpConvertSToF",""],["SpvOp__SpvOpConvertUToF",""],["SpvOp__SpvOpConvertUToPtr",""],["SpvOp__SpvOpCopyMemory",""],["SpvOp__SpvOpCopyMemorySized",""],["SpvOp__SpvOpCopyObject",""],["SpvOp__SpvOpCreatePipeFromPipeStorage",""],["SpvOp__SpvOpCreateUserEvent",""],["SpvOp__SpvOpDPdx",""],["SpvOp__SpvOpDPdxCoarse",""],["SpvOp__SpvOpDPdxFine",""],["SpvOp__SpvOpDPdy",""],["SpvOp__SpvOpDPdyCoarse",""],["SpvOp__SpvOpDPdyFine",""],["SpvOp__SpvOpDecorate",""],["SpvOp__SpvOpDecorateId",""],["SpvOp__SpvOpDecorateStringGOOGLE",""],["SpvOp__SpvOpDecorationGroup",""],["SpvOp__SpvOpDot",""],["SpvOp__SpvOpEmitStreamVertex",""],["SpvOp__SpvOpEmitVertex",""],["SpvOp__SpvOpEndPrimitive",""],["SpvOp__SpvOpEndStreamPrimitive",""],["SpvOp__SpvOpEnqueueKernel",""],["SpvOp__SpvOpEnqueueMarker",""],["SpvOp__SpvOpEntryPoint",""],["SpvOp__SpvOpExecuteCallableNV",""],["SpvOp__SpvOpExecutionMode",""],["SpvOp__SpvOpExecutionModeId",""],["SpvOp__SpvOpExtInst",""],["SpvOp__SpvOpExtInstImport",""],["SpvOp__SpvOpExtension",""],["SpvOp__SpvOpFAdd",""],["SpvOp__SpvOpFConvert",""],["SpvOp__SpvOpFDiv",""],["SpvOp__SpvOpFMod",""],["SpvOp__SpvOpFMul",""],["SpvOp__SpvOpFNegate",""],["SpvOp__SpvOpFOrdEqual",""],["SpvOp__SpvOpFOrdGreaterThan",""],["SpvOp__SpvOpFOrdGreaterThanEqual",""],["SpvOp__SpvOpFOrdLessThan",""],["SpvOp__SpvOpFOrdLessThanEqual",""],["SpvOp__SpvOpFOrdNotEqual",""],["SpvOp__SpvOpFRem",""],["SpvOp__SpvOpFSub",""],["SpvOp__SpvOpFUnordEqual",""],["SpvOp__SpvOpFUnordGreaterThan",""],["SpvOp__SpvOpFUnordGreaterThanEqual",""],["SpvOp__SpvOpFUnordLessThan",""],["SpvOp__SpvOpFUnordLessThanEqual",""],["SpvOp__SpvOpFUnordNotEqual",""],["SpvOp__SpvOpFragmentFetchAMD",""],["SpvOp__SpvOpFragmentMaskFetchAMD",""],["SpvOp__SpvOpFunction",""],["SpvOp__SpvOpFunctionCall",""],["SpvOp__SpvOpFunctionEnd",""],["SpvOp__SpvOpFunctionParameter",""],["SpvOp__SpvOpFwidth",""],["SpvOp__SpvOpFwidthCoarse",""],["SpvOp__SpvOpFwidthFine",""],["SpvOp__SpvOpGenericCastToPtr",""],["SpvOp__SpvOpGenericCastToPtrExplicit",""],["SpvOp__SpvOpGenericPtrMemSemantics",""],["SpvOp__SpvOpGetDefaultQueue",""],["SpvOp__SpvOpGetKernelLocalSizeForSubgroupCount",""],["SpvOp__SpvOpGetKernelMaxNumSubgroups",""],["SpvOp__SpvOpGetKernelNDrangeMaxSubGroupSize",""],["SpvOp__SpvOpGetKernelNDrangeSubGroupCount",""],["SpvOp__SpvOpGetKernelPreferredWorkGroupSizeMultiple",""],["SpvOp__SpvOpGetKernelWorkGroupSize",""],["SpvOp__SpvOpGetMaxPipePackets",""],["SpvOp__SpvOpGetNumPipePackets",""],["SpvOp__SpvOpGroupAll",""],["SpvOp__SpvOpGroupAny",""],["SpvOp__SpvOpGroupAsyncCopy",""],["SpvOp__SpvOpGroupBroadcast",""],["SpvOp__SpvOpGroupCommitReadPipe",""],["SpvOp__SpvOpGroupCommitWritePipe",""],["SpvOp__SpvOpGroupDecorate",""],["SpvOp__SpvOpGroupFAdd",""],["SpvOp__SpvOpGroupFAddNonUniformAMD",""],["SpvOp__SpvOpGroupFMax",""],["SpvOp__SpvOpGroupFMaxNonUniformAMD",""],["SpvOp__SpvOpGroupFMin",""],["SpvOp__SpvOpGroupFMinNonUniformAMD",""],["SpvOp__SpvOpGroupIAdd",""],["SpvOp__SpvOpGroupIAddNonUniformAMD",""],["SpvOp__SpvOpGroupMemberDecorate",""],["SpvOp__SpvOpGroupNonUniformAll",""],["SpvOp__SpvOpGroupNonUniformAllEqual",""],["SpvOp__SpvOpGroupNonUniformAny",""],["SpvOp__SpvOpGroupNonUniformBallot",""],["SpvOp__SpvOpGroupNonUniformBallotBitCount",""],["SpvOp__SpvOpGroupNonUniformBallotBitExtract",""],["SpvOp__SpvOpGroupNonUniformBallotFindLSB",""],["SpvOp__SpvOpGroupNonUniformBallotFindMSB",""],["SpvOp__SpvOpGroupNonUniformBitwiseAnd",""],["SpvOp__SpvOpGroupNonUniformBitwiseOr",""],["SpvOp__SpvOpGroupNonUniformBitwiseXor",""],["SpvOp__SpvOpGroupNonUniformBroadcast",""],["SpvOp__SpvOpGroupNonUniformBroadcastFirst",""],["SpvOp__SpvOpGroupNonUniformElect",""],["SpvOp__SpvOpGroupNonUniformFAdd",""],["SpvOp__SpvOpGroupNonUniformFMax",""],["SpvOp__SpvOpGroupNonUniformFMin",""],["SpvOp__SpvOpGroupNonUniformFMul",""],["SpvOp__SpvOpGroupNonUniformIAdd",""],["SpvOp__SpvOpGroupNonUniformIMul",""],["SpvOp__SpvOpGroupNonUniformInverseBallot",""],["SpvOp__SpvOpGroupNonUniformLogicalAnd",""],["SpvOp__SpvOpGroupNonUniformLogicalOr",""],["SpvOp__SpvOpGroupNonUniformLogicalXor",""],["SpvOp__SpvOpGroupNonUniformPartitionNV",""],["SpvOp__SpvOpGroupNonUniformQuadBroadcast",""],["SpvOp__SpvOpGroupNonUniformQuadSwap",""],["SpvOp__SpvOpGroupNonUniformSMax",""],["SpvOp__SpvOpGroupNonUniformSMin",""],["SpvOp__SpvOpGroupNonUniformShuffle",""],["SpvOp__SpvOpGroupNonUniformShuffleDown",""],["SpvOp__SpvOpGroupNonUniformShuffleUp",""],["SpvOp__SpvOpGroupNonUniformShuffleXor",""],["SpvOp__SpvOpGroupNonUniformUMax",""],["SpvOp__SpvOpGroupNonUniformUMin",""],["SpvOp__SpvOpGroupReserveReadPipePackets",""],["SpvOp__SpvOpGroupReserveWritePipePackets",""],["SpvOp__SpvOpGroupSMax",""],["SpvOp__SpvOpGroupSMaxNonUniformAMD",""],["SpvOp__SpvOpGroupSMin",""],["SpvOp__SpvOpGroupSMinNonUniformAMD",""],["SpvOp__SpvOpGroupUMax",""],["SpvOp__SpvOpGroupUMaxNonUniformAMD",""],["SpvOp__SpvOpGroupUMin",""],["SpvOp__SpvOpGroupUMinNonUniformAMD",""],["SpvOp__SpvOpGroupWaitEvents",""],["SpvOp__SpvOpIAdd",""],["SpvOp__SpvOpIAddCarry",""],["SpvOp__SpvOpIEqual",""],["SpvOp__SpvOpIMul",""],["SpvOp__SpvOpINotEqual",""],["SpvOp__SpvOpISub",""],["SpvOp__SpvOpISubBorrow",""],["SpvOp__SpvOpIgnoreIntersectionNV",""],["SpvOp__SpvOpImage",""],["SpvOp__SpvOpImageDrefGather",""],["SpvOp__SpvOpImageFetch",""],["SpvOp__SpvOpImageGather",""],["SpvOp__SpvOpImageQueryFormat",""],["SpvOp__SpvOpImageQueryLevels",""],["SpvOp__SpvOpImageQueryLod",""],["SpvOp__SpvOpImageQueryOrder",""],["SpvOp__SpvOpImageQuerySamples",""],["SpvOp__SpvOpImageQuerySize",""],["SpvOp__SpvOpImageQuerySizeLod",""],["SpvOp__SpvOpImageRead",""],["SpvOp__SpvOpImageSampleDrefExplicitLod",""],["SpvOp__SpvOpImageSampleDrefImplicitLod",""],["SpvOp__SpvOpImageSampleExplicitLod",""],["SpvOp__SpvOpImageSampleFootprintNV",""],["SpvOp__SpvOpImageSampleImplicitLod",""],["SpvOp__SpvOpImageSampleProjDrefExplicitLod",""],["SpvOp__SpvOpImageSampleProjDrefImplicitLod",""],["SpvOp__SpvOpImageSampleProjExplicitLod",""],["SpvOp__SpvOpImageSampleProjImplicitLod",""],["SpvOp__SpvOpImageSparseDrefGather",""],["SpvOp__SpvOpImageSparseFetch",""],["SpvOp__SpvOpImageSparseGather",""],["SpvOp__SpvOpImageSparseRead",""],["SpvOp__SpvOpImageSparseSampleDrefExplicitLod",""],["SpvOp__SpvOpImageSparseSampleDrefImplicitLod",""],["SpvOp__SpvOpImageSparseSampleExplicitLod",""],["SpvOp__SpvOpImageSparseSampleImplicitLod",""],["SpvOp__SpvOpImageSparseSampleProjDrefExplicitLod",""],["SpvOp__SpvOpImageSparseSampleProjDrefImplicitLod",""],["SpvOp__SpvOpImageSparseSampleProjExplicitLod",""],["SpvOp__SpvOpImageSparseSampleProjImplicitLod",""],["SpvOp__SpvOpImageSparseTexelsResident",""],["SpvOp__SpvOpImageTexelPointer",""],["SpvOp__SpvOpImageWrite",""],["SpvOp__SpvOpInBoundsAccessChain",""],["SpvOp__SpvOpInBoundsPtrAccessChain",""],["SpvOp__SpvOpIsFinite",""],["SpvOp__SpvOpIsInf",""],["SpvOp__SpvOpIsNan",""],["SpvOp__SpvOpIsNormal",""],["SpvOp__SpvOpIsValidEvent",""],["SpvOp__SpvOpIsValidReserveId",""],["SpvOp__SpvOpKill",""],["SpvOp__SpvOpLabel",""],["SpvOp__SpvOpLessOrGreater",""],["SpvOp__SpvOpLifetimeStart",""],["SpvOp__SpvOpLifetimeStop",""],["SpvOp__SpvOpLine",""],["SpvOp__SpvOpLoad",""],["SpvOp__SpvOpLogicalAnd",""],["SpvOp__SpvOpLogicalEqual",""],["SpvOp__SpvOpLogicalNot",""],["SpvOp__SpvOpLogicalNotEqual",""],["SpvOp__SpvOpLogicalOr",""],["SpvOp__SpvOpLoopMerge",""],["SpvOp__SpvOpMatrixTimesMatrix",""],["SpvOp__SpvOpMatrixTimesScalar",""],["SpvOp__SpvOpMatrixTimesVector",""],["SpvOp__SpvOpMax",""],["SpvOp__SpvOpMemberDecorate",""],["SpvOp__SpvOpMemberDecorateStringGOOGLE",""],["SpvOp__SpvOpMemberName",""],["SpvOp__SpvOpMemoryBarrier",""],["SpvOp__SpvOpMemoryModel",""],["SpvOp__SpvOpMemoryNamedBarrier",""],["SpvOp__SpvOpModuleProcessed",""],["SpvOp__SpvOpName",""],["SpvOp__SpvOpNamedBarrierInitialize",""],["SpvOp__SpvOpNoLine",""],["SpvOp__SpvOpNop",""],["SpvOp__SpvOpNot",""],["SpvOp__SpvOpOrdered",""],["SpvOp__SpvOpOuterProduct",""],["SpvOp__SpvOpPhi",""],["SpvOp__SpvOpPtrAccessChain",""],["SpvOp__SpvOpPtrCastToGeneric",""],["SpvOp__SpvOpQuantizeToF16",""],["SpvOp__SpvOpReadPipe",""],["SpvOp__SpvOpReleaseEvent",""],["SpvOp__SpvOpReportIntersectionNV",""],["SpvOp__SpvOpReserveReadPipePackets",""],["SpvOp__SpvOpReserveWritePipePackets",""],["SpvOp__SpvOpReservedReadPipe",""],["SpvOp__SpvOpReservedWritePipe",""],["SpvOp__SpvOpRetainEvent",""],["SpvOp__SpvOpReturn",""],["SpvOp__SpvOpReturnValue",""],["SpvOp__SpvOpSConvert",""],["SpvOp__SpvOpSDiv",""],["SpvOp__SpvOpSGreaterThan",""],["SpvOp__SpvOpSGreaterThanEqual",""],["SpvOp__SpvOpSLessThan",""],["SpvOp__SpvOpSLessThanEqual",""],["SpvOp__SpvOpSMod",""],["SpvOp__SpvOpSMulExtended",""],["SpvOp__SpvOpSNegate",""],["SpvOp__SpvOpSRem",""],["SpvOp__SpvOpSampledImage",""],["SpvOp__SpvOpSatConvertSToU",""],["SpvOp__SpvOpSatConvertUToS",""],["SpvOp__SpvOpSelect",""],["SpvOp__SpvOpSelectionMerge",""],["SpvOp__SpvOpSetUserEventStatus",""],["SpvOp__SpvOpShiftLeftLogical",""],["SpvOp__SpvOpShiftRightArithmetic",""],["SpvOp__SpvOpShiftRightLogical",""],["SpvOp__SpvOpSignBitSet",""],["SpvOp__SpvOpSizeOf",""],["SpvOp__SpvOpSource",""],["SpvOp__SpvOpSourceContinued",""],["SpvOp__SpvOpSourceExtension",""],["SpvOp__SpvOpSpecConstant",""],["SpvOp__SpvOpSpecConstantComposite",""],["SpvOp__SpvOpSpecConstantFalse",""],["SpvOp__SpvOpSpecConstantOp",""],["SpvOp__SpvOpSpecConstantTrue",""],["SpvOp__SpvOpStore",""],["SpvOp__SpvOpString",""],["SpvOp__SpvOpSubgroupAllEqualKHR",""],["SpvOp__SpvOpSubgroupAllKHR",""],["SpvOp__SpvOpSubgroupAnyKHR",""],["SpvOp__SpvOpSubgroupBallotKHR",""],["SpvOp__SpvOpSubgroupBlockReadINTEL",""],["SpvOp__SpvOpSubgroupBlockWriteINTEL",""],["SpvOp__SpvOpSubgroupFirstInvocationKHR",""],["SpvOp__SpvOpSubgroupImageBlockReadINTEL",""],["SpvOp__SpvOpSubgroupImageBlockWriteINTEL",""],["SpvOp__SpvOpSubgroupReadInvocationKHR",""],["SpvOp__SpvOpSubgroupShuffleDownINTEL",""],["SpvOp__SpvOpSubgroupShuffleINTEL",""],["SpvOp__SpvOpSubgroupShuffleUpINTEL",""],["SpvOp__SpvOpSubgroupShuffleXorINTEL",""],["SpvOp__SpvOpSwitch",""],["SpvOp__SpvOpTerminateRayNV",""],["SpvOp__SpvOpTraceNV",""],["SpvOp__SpvOpTranspose",""],["SpvOp__SpvOpTypeAccelerationStructureNV",""],["SpvOp__SpvOpTypeArray",""],["SpvOp__SpvOpTypeBool",""],["SpvOp__SpvOpTypeDeviceEvent",""],["SpvOp__SpvOpTypeEvent",""],["SpvOp__SpvOpTypeFloat",""],["SpvOp__SpvOpTypeForwardPointer",""],["SpvOp__SpvOpTypeFunction",""],["SpvOp__SpvOpTypeImage",""],["SpvOp__SpvOpTypeInt",""],["SpvOp__SpvOpTypeMatrix",""],["SpvOp__SpvOpTypeNamedBarrier",""],["SpvOp__SpvOpTypeOpaque",""],["SpvOp__SpvOpTypePipe",""],["SpvOp__SpvOpTypePipeStorage",""],["SpvOp__SpvOpTypePointer",""],["SpvOp__SpvOpTypeQueue",""],["SpvOp__SpvOpTypeReserveId",""],["SpvOp__SpvOpTypeRuntimeArray",""],["SpvOp__SpvOpTypeSampledImage",""],["SpvOp__SpvOpTypeSampler",""],["SpvOp__SpvOpTypeStruct",""],["SpvOp__SpvOpTypeVector",""],["SpvOp__SpvOpTypeVoid",""],["SpvOp__SpvOpUConvert",""],["SpvOp__SpvOpUDiv",""],["SpvOp__SpvOpUGreaterThan",""],["SpvOp__SpvOpUGreaterThanEqual",""],["SpvOp__SpvOpULessThan",""],["SpvOp__SpvOpULessThanEqual",""],["SpvOp__SpvOpUMod",""],["SpvOp__SpvOpUMulExtended",""],["SpvOp__SpvOpUndef",""],["SpvOp__SpvOpUnordered",""],["SpvOp__SpvOpUnreachable",""],["SpvOp__SpvOpVariable",""],["SpvOp__SpvOpVectorExtractDynamic",""],["SpvOp__SpvOpVectorInsertDynamic",""],["SpvOp__SpvOpVectorShuffle",""],["SpvOp__SpvOpVectorTimesMatrix",""],["SpvOp__SpvOpVectorTimesScalar",""],["SpvOp__SpvOpWritePackedPrimitiveIndices4x8NV",""],["SpvOp__SpvOpWritePipe",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_BLOCK",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_BUFFER_BLOCK",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_BUILT_IN",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_COLUMN_MAJOR",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_FLAT",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_NONE",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_NON_WRITABLE",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_NOPERSPECTIVE",""],["SpvReflectDecorationFlagBits_SPV_REFLECT_DECORATION_ROW_MAJOR",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_INPUT_ATTACHMENT",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_BUFFER",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_BUFFER",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC",""],["SpvReflectDescriptorType_SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32B32A32_SFLOAT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32B32A32_SINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32B32A32_UINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32B32_SFLOAT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32B32_SINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32B32_UINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32_SFLOAT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32_SINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32G32_UINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32_SFLOAT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32_SINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_R32_UINT",""],["SpvReflectFormat_SPV_REFLECT_FORMAT_UNDEFINED",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_CLAY_CLAY_SHADER_COMPILER",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_GOOGLE_RSPIRV",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_GOOGLE_SHADERC_OVER_GLSLANG",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_GOOGLE_SPIREGG",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_KHRONOS_GLSLANG_REFERENCE_FRONT_END",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_KHRONOS_LLVM_SPIRV_TRANSLATOR",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_KHRONOS_SPIRV_TOOLS_ASSEMBLER",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_KHRONOS_SPIRV_TOOLS_LINKER",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_WINE_VKD3D_SHADER_COMPILER",""],["SpvReflectGenerator_SPV_REFLECT_GENERATOR_X_LEGEND_MESA_MESAIR_SPIRV_TRANSLATOR",""],["SpvReflectResourceType_SPV_REFLECT_RESOURCE_FLAG_CBV",""],["SpvReflectResourceType_SPV_REFLECT_RESOURCE_FLAG_SAMPLER",""],["SpvReflectResourceType_SPV_REFLECT_RESOURCE_FLAG_SRV",""],["SpvReflectResourceType_SPV_REFLECT_RESOURCE_FLAG_UAV",""],["SpvReflectResourceType_SPV_REFLECT_RESOURCE_FLAG_UNDEFINED",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_ALLOC_FAILED",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_COUNT_MISMATCH",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_ELEMENT_NOT_FOUND",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_INTERNAL_ERROR",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_NULL_POINTER",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_PARSE_FAILED",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_RANGE_EXCEEDED",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_CODE_SIZE",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_ID_REFERENCE",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_MAGIC_NUMBER",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_STORAGE_CLASS",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_RECURSION",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_SET_NUMBER_OVERFLOW",""],["SpvReflectResult_SPV_REFLECT_RESULT_ERROR_SPIRV_UNEXPECTED_EOF",""],["SpvReflectResult_SPV_REFLECT_RESULT_NOT_READY",""],["SpvReflectResult_SPV_REFLECT_RESULT_SUCCESS",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_ANY_HIT_BIT_NV",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_CALLABLE_BIT_NV",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_CLOSEST_HIT_BIT_NV",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_COMPUTE_BIT",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_FRAGMENT_BIT",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_GEOMETRY_BIT",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_INTERSECTION_BIT_NV",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_MISS_BIT_NV",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_RAYGEN_BIT_NV",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_TESSELLATION_CONTROL_BIT",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_TESSELLATION_EVALUATION_BIT",""],["SpvReflectShaderStageFlagBits_SPV_REFLECT_SHADER_STAGE_VERTEX_BIT",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_ARRAY",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_BOOL",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_EXTERNAL_ACCELERATION_STRUCTURE_NV",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_EXTERNAL_BLOCK",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_EXTERNAL_IMAGE",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_EXTERNAL_MASK",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_EXTERNAL_SAMPLED_IMAGE",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_EXTERNAL_SAMPLER",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_FLOAT",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_INT",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_MATRIX",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_STRUCT",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_UNDEFINED",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_VECTOR",""],["SpvReflectTypeFlagBits_SPV_REFLECT_TYPE_FLAG_VOID",""],["SpvSamplerAddressingMode__SpvSamplerAddressingModeClamp",""],["SpvSamplerAddressingMode__SpvSamplerAddressingModeClampToEdge",""],["SpvSamplerAddressingMode__SpvSamplerAddressingModeMax",""],["SpvSamplerAddressingMode__SpvSamplerAddressingModeNone",""],["SpvSamplerAddressingMode__SpvSamplerAddressingModeRepeat",""],["SpvSamplerAddressingMode__SpvSamplerAddressingModeRepeatMirrored",""],["SpvSamplerFilterMode__SpvSamplerFilterModeLinear",""],["SpvSamplerFilterMode__SpvSamplerFilterModeMax",""],["SpvSamplerFilterMode__SpvSamplerFilterModeNearest",""],["SpvScope__SpvScopeCrossDevice",""],["SpvScope__SpvScopeDevice",""],["SpvScope__SpvScopeInvocation",""],["SpvScope__SpvScopeMax",""],["SpvScope__SpvScopeQueueFamilyKHR",""],["SpvScope__SpvScopeSubgroup",""],["SpvScope__SpvScopeWorkgroup",""],["SpvSelectionControlMask__SpvSelectionControlDontFlattenMask",""],["SpvSelectionControlMask__SpvSelectionControlFlattenMask",""],["SpvSelectionControlMask__SpvSelectionControlMaskNone",""],["SpvSelectionControlShift__SpvSelectionControlDontFlattenShift",""],["SpvSelectionControlShift__SpvSelectionControlFlattenShift",""],["SpvSelectionControlShift__SpvSelectionControlMax",""],["SpvSourceLanguage__SpvSourceLanguageESSL",""],["SpvSourceLanguage__SpvSourceLanguageGLSL",""],["SpvSourceLanguage__SpvSourceLanguageHLSL",""],["SpvSourceLanguage__SpvSourceLanguageMax",""],["SpvSourceLanguage__SpvSourceLanguageOpenCL_C",""],["SpvSourceLanguage__SpvSourceLanguageOpenCL_CPP",""],["SpvSourceLanguage__SpvSourceLanguageUnknown",""],["SpvStorageClass__SpvStorageClassAtomicCounter",""],["SpvStorageClass__SpvStorageClassCallableDataNV",""],["SpvStorageClass__SpvStorageClassCrossWorkgroup",""],["SpvStorageClass__SpvStorageClassFunction",""],["SpvStorageClass__SpvStorageClassGeneric",""],["SpvStorageClass__SpvStorageClassHitAttributeNV",""],["SpvStorageClass__SpvStorageClassImage",""],["SpvStorageClass__SpvStorageClassIncomingCallableDataNV",""],["SpvStorageClass__SpvStorageClassIncomingRayPayloadNV",""],["SpvStorageClass__SpvStorageClassInput",""],["SpvStorageClass__SpvStorageClassMax",""],["SpvStorageClass__SpvStorageClassOutput",""],["SpvStorageClass__SpvStorageClassPrivate",""],["SpvStorageClass__SpvStorageClassPushConstant",""],["SpvStorageClass__SpvStorageClassRayPayloadNV",""],["SpvStorageClass__SpvStorageClassShaderRecordBufferNV",""],["SpvStorageClass__SpvStorageClassStorageBuffer",""],["SpvStorageClass__SpvStorageClassUniform",""],["SpvStorageClass__SpvStorageClassUniformConstant",""],["SpvStorageClass__SpvStorageClassWorkgroup",""]],"fn":[["spvReflectChangeDescriptorBindingNumber",""],["spvReflectChangeDescriptorBindingNumbers","@fn spvReflectChangeDescriptorBindingNumbers @brief  Assign new set and/or binding numbers to a descriptor binding. In addition to updating the reflection data, this function modifies the underlying SPIR-V bytecode. The updated code can be retrieved with spvReflectGetCode().  If the binding is used in multiple entry points within the module, it will be changed in all of them. @param  p_module            Pointer to an instance of SpvReflectShaderModule. @param  p_binding           Pointer to the descriptor binding to modify. @param  new_binding_number  The new binding number to assign to the provided descriptor binding. To leave the binding number unchanged, pass SPV_REFLECT_BINDING_NUMBER_DONT_CHANGE. @param  new_set_number      The new set number to assign to the provided descriptor binding. Successfully changing a descriptor binding's set number invalidates all existing SpvReflectDescriptorBinding and SpvReflectDescriptorSet pointers from this module. To leave the set number unchanged, pass SPV_REFLECT_SET_NUMBER_DONT_CHANGE. @return                     If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectChangeDescriptorSetNumber","@fn spvReflectChangeDescriptorSetNumber @brief  Assign a new set number to an entire descriptor set (including all descriptor bindings in that set). In addition to updating the reflection data, this function modifies the underlying SPIR-V bytecode. The updated code can be retrieved with spvReflectGetCode().  If the descriptor set is used in multiple entry points within the module, it will be modified in all of them. @param  p_module        Pointer to an instance of SpvReflectShaderModule. @param  p_set           Pointer to the descriptor binding to modify. @param  new_set_number  The new set number to assign to the provided descriptor set, and all its descriptor bindings. Successfully changing a descriptor binding's set number invalidates all existing SpvReflectDescriptorBinding and SpvReflectDescriptorSet pointers from this module. To leave the set number unchanged, pass SPV_REFLECT_SET_NUMBER_DONT_CHANGE. @return                 If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectChangeInputVariableLocation","@fn spvReflectChangeInputVariableLocation @brief  Assign a new location to an input interface variable. In addition to updating the reflection data, this function modifies the underlying SPIR-V bytecode. The updated code can be retrieved with spvReflectGetCode(). It is the caller's responsibility to avoid assigning the same location to multiple input variables.  If the input variable is used by multiple entry points in the module, it will be changed in all of them. @param  p_module          Pointer to an instance of SpvReflectShaderModule. @param  p_input_variable  Pointer to the input variable to update. @param  new_location      The new location to assign to p_input_variable. @return                   If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectChangeOutputVariableLocation","@fn spvReflectChangeOutputVariableLocation @brief  Assign a new location to an output interface variable. In addition to updating the reflection data, this function modifies the underlying SPIR-V bytecode. The updated code can be retrieved with spvReflectGetCode(). It is the caller's responsibility to avoid assigning the same location to multiple output variables.  If the output variable is used by multiple entry points in the module, it will be changed in all of them. @param  p_module          Pointer to an instance of SpvReflectShaderModule. @param  p_output_variable  Pointer to the output variable to update. @param  new_location      The new location to assign to p_output_variable. @return                   If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectCreateShaderModule","@fn spvReflectCreateShaderModule"],["spvReflectDestroyShaderModule","@fn spvReflectDestroyShaderModule"],["spvReflectEnumerateDescriptorBindings","@fn spvReflectEnumerateDescriptorBindings"],["spvReflectEnumerateDescriptorSets","@fn spvReflectEnumerateDescriptorSets"],["spvReflectEnumerateEntryPointDescriptorBindings","@fn spvReflectEnumerateEntryPointDescriptorBindings @brief  Creates a listing of all descriptor bindings that are used in the static call tree of the given entry point. @param  p_module     Pointer to an instance of SpvReflectShaderModule. @param  entry_point  The name of the entry point to get the descriptor bindings for. @param  p_count      If pp_bindings is NULL, the entry point's descriptor binding count (across all descriptor sets) will be stored here. If pp_bindings is not NULL, *p_count must contain the entry points's descriptor binding count. @param  pp_bindings  If NULL, the entry point's total descriptor binding count will be written to *p_count. If non-NULL, pp_bindings must point to an array with p_count entries, where pointers to the entry point's descriptor bindings will be written. The caller must not free the binding pointers written to this array. @return              If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumerateEntryPointDescriptorSets","@fn spvReflectEnumerateEntryPointDescriptorSets @brief  Creates a listing of all descriptor sets and their bindings that are used in the static call tree of a given entry point. @param  p_module    Pointer to an instance of SpvReflectShaderModule. @param  entry_point The name of the entry point to get the descriptor bindings for. @param  p_count     If pp_sets is NULL, the module's descriptor set count will be stored here. If pp_sets is not NULL, *p_count must contain the module's descriptor set count. @param  pp_sets     If NULL, the module's total descriptor set count will be written to *p_count. If non-NULL, pp_sets must point to an array with p_count entries, where pointers to the module's descriptor sets will be written. The caller must not free the descriptor set pointers written to this array. @return             If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumerateEntryPointInputVariables","@fn spvReflectEnumerateEntryPointInputVariables @brief  Enumerate the input variables for a given entry point. @param  entry_point The name of the entry point to get the input variables for. @param  p_module      Pointer to an instance of SpvReflectShaderModule. @param  p_count       If pp_variables is NULL, the entry point's input variable count will be stored here. If pp_variables is not NULL, *p_count must contain the entry point's input variable count. @param  pp_variables  If NULL, the entry point's input variable count will be written to *p_count. If non-NULL, pp_variables must point to an array with p_count entries, where pointers to the entry point's input variables will be written. The caller must not free the interface variables written to this array. @return               If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumerateEntryPointOutputVariables","@fn spvReflectEnumerateEntryPointOutputVariables @brief  Enumerate the output variables for a given entry point. @param  p_module      Pointer to an instance of SpvReflectShaderModule. @param  entry_point   The name of the entry point to get the output variables for. @param  p_count       If pp_variables is NULL, the entry point's output variable count will be stored here. If pp_variables is not NULL, *p_count must contain the entry point's output variable count. @param  pp_variables  If NULL, the entry point's output variable count will be written to *p_count. If non-NULL, pp_variables must point to an array with p_count entries, where pointers to the entry point's output variables will be written. The caller must not free the interface variables written to this array. @return               If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumerateEntryPointPushConstantBlocks","@fn spvReflectEnumerateEntryPointPushConstantBlocks @brief  Enumerate the push constant blocks used in the static call tree of a given entry point. @param  p_module   Pointer to an instance of SpvReflectShaderModule. @param  p_count    If pp_blocks is NULL, the entry point's push constant block count will be stored here. If pp_blocks is not NULL, *p_count must contain the entry point's push constant block count. @param  pp_blocks  If NULL, the entry point's push constant block count will be written to *p_count. If non-NULL, pp_blocks must point to an array with *p_count entries, where pointers to the entry point's push constant blocks will be written. The caller must not free the block variables written to this array. @return            If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumerateInputVariables","@fn spvReflectEnumerateInputVariables @brief  If the module contains multiple entry points, this will only get the input variables for the first one. @param  p_module      Pointer to an instance of SpvReflectShaderModule. @param  p_count       If pp_variables is NULL, the module's input variable count will be stored here. If pp_variables is not NULL, *p_count must contain the module's input variable count. @param  pp_variables  If NULL, the module's input variable count will be written to *p_count. If non-NULL, pp_variables must point to an array with p_count entries, where pointers to the module's input variables will be written. The caller must not free the interface variables written to this array. @return               If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumerateOutputVariables","@fn spvReflectEnumerateOutputVariables @brief  Note: If the module contains multiple entry points, this will only get the output variables for the first one. @param  p_module      Pointer to an instance of SpvReflectShaderModule. @param  p_count       If pp_variables is NULL, the module's output variable count will be stored here. If pp_variables is not NULL, *p_count must contain the module's output variable count. @param  pp_variables  If NULL, the module's output variable count will be written to *p_count. If non-NULL, pp_variables must point to an array with p_count entries, where pointers to the module's output variables will be written. The caller must not free the interface variables written to this array. @return               If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumeratePushConstantBlocks","@fn spvReflectEnumeratePushConstantBlocks @brief  Note: If the module contains multiple entry points, this will only get the push constant blocks for the first one. @param  p_module   Pointer to an instance of SpvReflectShaderModule. @param  p_count    If pp_blocks is NULL, the module's push constant block count will be stored here. If pp_blocks is not NULL, *p_count must contain the module's push constant block count. @param  pp_blocks  If NULL, the module's push constant block count will be written to *p_count. If non-NULL, pp_blocks must point to an array with *p_count entries, where pointers to the module's push constant blocks will be written. The caller must not free the block variables written to this array. @return            If successful, returns SPV_REFLECT_RESULT_SUCCESS. Otherwise, the error code indicates the cause of the failure."],["spvReflectEnumeratePushConstants",""],["spvReflectGetCode","@fn spvReflectGetCode"],["spvReflectGetCodeSize","@fn spvReflectGetCodeSize"],["spvReflectGetDescriptorBinding","@fn spvReflectGetDescriptorBinding"],["spvReflectGetDescriptorSet","@fn spvReflectGetDescriptorSet"],["spvReflectGetEntryPoint","@fn spvReflectGetEntryPoint"],["spvReflectGetEntryPointDescriptorBinding","@fn spvReflectGetEntryPointDescriptorBinding @brief  Get the descriptor binding with the given binding number and set number that is used in the static call tree of a certain entry point. @param  p_module        Pointer to an instance of SpvReflectShaderModule. @param  entry_point     The entry point to get the binding from. @param  binding_number  The \"binding\" value of the requested descriptor binding. @param  set_number      The \"set\" value of the requested descriptor binding. @param  p_result        If successful, SPV_REFLECT_RESULT_SUCCESS will be written to *p_result. Otherwise, a error code indicating the cause of the failure will be stored here. @return                 If the entry point contains a descriptor binding that matches the provided [binding_number, set_number] values, a pointer to that binding is returned. The caller must not free this pointer. If no match can be found, or if an unrelated error occurs, the return value will be NULL. Detailed error results are written to *pResult. @note                    If the entry point contains multiple desriptor bindings with the same set and binding numbers, there are no guarantees about which binding will be returned."],["spvReflectGetEntryPointDescriptorSet","@fn spvReflectGetEntryPointDescriptorSet"],["spvReflectGetEntryPointInputVariableByLocation",""],["spvReflectGetEntryPointInputVariableBySemantic",""],["spvReflectGetEntryPointOutputVariableByLocation",""],["spvReflectGetEntryPointOutputVariableBySemantic",""],["spvReflectGetEntryPointPushConstantBlock","@fn spvReflectGetEntryPointPushConstantBlock @brief  Get the push constant block corresponding to the given entry point. As by the Vulkan specification there can be no more than one push constant block used by a given entry point, so if there is one it will be returned, otherwise NULL will be returned. @param  p_module     Pointer to an instance of SpvReflectShaderModule. @param  entry_point  The entry point to get the push constant block from. @param  p_result     If successful, SPV_REFLECT_RESULT_SUCCESS will be written to *p_result. Otherwise, a error code indicating the cause of the failure will be stored here. @return              If the provided index is within range, a pointer to the corresponding push constant block is returned. The caller must not free this pointer. If no match can be found, or if an unrelated error occurs, the return value will be NULL. Detailed error results are written to *pResult."],["spvReflectGetInputVariable",""],["spvReflectGetInputVariableByLocation",""],["spvReflectGetInputVariableBySemantic",""],["spvReflectGetOutputVariable",""],["spvReflectGetOutputVariableByLocation",""],["spvReflectGetOutputVariableBySemantic",""],["spvReflectGetPushConstant",""],["spvReflectGetPushConstantBlock","@fn spvReflectGetPushConstantBlock"],["spvReflectGetShaderModule",""],["spvReflectSourceLanguage","@fn spvReflectSourceLanguage"]],"struct":[["SpvReflectArrayTraits",""],["SpvReflectBindingArrayTraits",""],["SpvReflectBlockVariable","@struct SpvReflectBlockVariable"],["SpvReflectDescriptorBinding","@struct SpvReflectDescriptorBinding"],["SpvReflectDescriptorBinding__bindgen_ty_1",""],["SpvReflectDescriptorSet","@struct SpvReflectDescriptorSet"],["SpvReflectEntryPoint","@struct SpvReflectEntryPoint"],["SpvReflectImageTraits",""],["SpvReflectInterfaceVariable","@struct SpvReflectInterfaceVariable"],["SpvReflectInterfaceVariable__bindgen_ty_1",""],["SpvReflectNumericTraits",""],["SpvReflectNumericTraits_Matrix",""],["SpvReflectNumericTraits_Scalar",""],["SpvReflectNumericTraits_Vector",""],["SpvReflectShaderModule","@struct SpvReflectShaderModule"],["SpvReflectShaderModule_Internal",""],["SpvReflectTypeDescription","@struct SpvReflectTypeDescription"],["SpvReflectTypeDescription_Traits",""]],"type":[["SpvAccessQualifier_",""],["SpvAddressingModel_",""],["SpvBuiltIn_",""],["SpvCapability_",""],["SpvDecoration_",""],["SpvDim_",""],["SpvExecutionMode_",""],["SpvExecutionModel_",""],["SpvFPFastMathModeMask_",""],["SpvFPFastMathModeShift_",""],["SpvFPRoundingMode_",""],["SpvFunctionControlMask_",""],["SpvFunctionControlShift_",""],["SpvFunctionParameterAttribute_",""],["SpvGroupOperation_",""],["SpvId",""],["SpvImageChannelDataType_",""],["SpvImageChannelOrder_",""],["SpvImageFormat_",""],["SpvImageOperandsMask_",""],["SpvImageOperandsShift_",""],["SpvKernelEnqueueFlags_",""],["SpvKernelProfilingInfoMask_",""],["SpvKernelProfilingInfoShift_",""],["SpvLinkageType_",""],["SpvLoopControlMask_",""],["SpvLoopControlShift_",""],["SpvMemoryAccessMask_",""],["SpvMemoryAccessShift_",""],["SpvMemoryModel_",""],["SpvMemorySemanticsMask_",""],["SpvMemorySemanticsShift_",""],["SpvOp_",""],["SpvReflectDecorationFlagBits","@enum SpvReflectDecorationBits"],["SpvReflectDecorationFlags",""],["SpvReflectDescriptorType","@enum SpvReflectDescriptorType"],["SpvReflectFormat","@enum SpvReflectFormat"],["SpvReflectGenerator","@enum SpvReflectGenerator"],["SpvReflectResourceType","@enum SpvReflectResourceType"],["SpvReflectResult","@enum SpvReflectResult"],["SpvReflectShaderStageFlagBits","@enum SpvReflectShaderStageFlagBits"],["SpvReflectTypeFlagBits","@enum SpvReflectTypeFlagBits"],["SpvReflectTypeFlags",""],["SpvSamplerAddressingMode_",""],["SpvSamplerFilterMode_",""],["SpvScope_",""],["SpvSelectionControlMask_",""],["SpvSelectionControlShift_",""],["SpvSourceLanguage_",""],["SpvStorageClass_",""],["_bindgen_ty_1",""],["_bindgen_ty_2",""]]});